<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--***************************************************************************
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//*****************************************************************************
-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"></xsd:import>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExpressionEditorStringId.Constant_True" xml:space="preserve">
    <value>Representa o valor booleano True.</value>
  </data>
  <data name="ExpressionEditorStringId.Constant_False" xml:space="preserve">
    <value>Representa o valor booleano False.</value>
  </data>
  <data name="ExpressionEditorStringId.Constant_Null" xml:space="preserve">
    <value>Representa uma referência nula, que não se refere a qualquer objeto.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Plus" xml:space="preserve">
    <value>Adiciona o valor de uma expressão numérica para outro, ou concatena duas strings.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Minus" xml:space="preserve">
    <value>Encontra a diferença entre dois números.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Multiply" xml:space="preserve">
    <value>Multiplica o valor de duas expressões.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Divide" xml:space="preserve">
    <value>Divide o primeiro operando pelo segundo.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Modulo" xml:space="preserve">
    <value>Retorna o resto (módulo) obtido dividindo uma expressão numérica para outra.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_BitwiseOr" xml:space="preserve">
    <value>Compara cada bit de o primeiro operando ao bit correspondente de seu segundo operando. Se um bit é 1, o bit de resultado correspondente é definido como 1. Caso contrário, o resultado correspondente bit é definido como 0.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_BitwiseAnd" xml:space="preserve">
    <value>Realiza uma operação lógica AND bit a bit entre dois valores inteiros.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_BitwiseXor" xml:space="preserve">
    <value>Executa uma exclusão lógica em duas expressões booleanas ou uma exclusão bit a bit em duas expressões numéricas.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Equal" xml:space="preserve">
    <value>Retorna verdadeiro se ambos os operandos têm o mesmo valor, caso contrário, ele retorna falso.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_NotEqual" xml:space="preserve">
    <value>Retorna verdadeiro se os operandos não têm o mesmo valor, caso contrário, ele retorna falso.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Less" xml:space="preserve">
    <value>Menos que o operador. Usado para comparar expressões.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_LessOrEqual" xml:space="preserve">
    <value>Inferior ou igual a do operador. Usado para comparar expressões.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_GreaterOrEqual" xml:space="preserve">
    <value>Maior do que ou igual ao operador. Usado para comparar expressões.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Greater" xml:space="preserve">
    <value>Maior do que o operador. Usado para comparar expressões.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_In" xml:space="preserve">
    <value>In (,,,)
Testa a existência de uma propriedade em um objeto.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Like" xml:space="preserve">
    <value>Compara uma string com um padrão. Se o valor da cadeia de caracteres correspondente ao padrão, o resultado é verdadeiro. Se a cadeia não correspondem ao padrão, o resultado é falso. Se ambos string e padrão são strings vazias, o resultado é verdadeiro.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Between" xml:space="preserve">
    <value>Between (,)
Especifica uma faixa para testar. Retorna verdadeiro se o valor é maior ou igual ao primeiro operando e menor ou igual ao segundo operando.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_And" xml:space="preserve">
    <value>Executa uma junção lógica de duas expressões.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Or" xml:space="preserve">
    <value>Executa um operador lógico OR</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Not" xml:space="preserve">
    <value>Executa uma operação lógica NOT.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Max" xml:space="preserve">
    <value>Max(Value1, Value2)
Retorna o valor máximo dos valores especificados.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Min" xml:space="preserve">
    <value>Min(Value1, Value2)
Retorna o valor mínimo dos valores especificados.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Abs" xml:space="preserve">
    <value>Abs(Valor) 
Retorna o valor absoluto e positivo da expressão dado numérico.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Acos" xml:space="preserve">
    <value>Acos(Valor) 
Retorna o seno de um número (o ângulo, em radianos, cujo cosseno é a expressão flutuador dada).</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Asin" xml:space="preserve">
    <value>Asin(Valor) 
Retorna o arco seno de um número (o ângulo, em radianos, cujo seno é a expressão float dada).</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Atn" xml:space="preserve">
    <value>Atn(Valor) 
Retorna o arco tangente de um número (o ângulo, em radianos, cuja tangente é a expressão float dada).</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Atn2" xml:space="preserve">
    <value>Atn2(Valor1, Valor2) 
Retorna o ângulo cuja tangente é o quociente de dois números especificados, em radianos.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_BigMul" xml:space="preserve">
    <value>BigMul(Valor1, Valor2) 
Retorna um Int64 que contém o produto completo de duas especificados números de 32 bits.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Ceiling" xml:space="preserve">
    <value>Ceiling(Valor)
Retorna o menor número inteiro que é maior ou igual ao valor informado.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Cos" xml:space="preserve">
    <value>Cos(Valor)
Retorna o coseno do ângulo definido em radianos.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Sin" xml:space="preserve">
    <value>Sin(Valor)
Retorna o seno do ângulo representado em radianos.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Tan" xml:space="preserve">
    <value>Tan(Valor)
Retorna a tangente do ângulo representado em radianos.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Cosh" xml:space="preserve">
    <value>Cosh(Valor)
Retorna o coseno hiperbólico do ângulo definido em radianos.
</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Sinh" xml:space="preserve">
    <value>Sinh(Valor)
Retorna o seno hiperbólico do ângulo representado em radianos.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Tanh" xml:space="preserve">
    <value>Tanh(Valor)
Retorna a tangente hiperbólica do ângulo representado em radianos.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Exp" xml:space="preserve">
    <value>Exp(Value)
Retorna o valor exponencial da expressão float dado.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Sqr" xml:space="preserve">
    <value>Sqr(Value)
Retorna a raiz quadrada de um número determinado.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Floor" xml:space="preserve">
    <value>Floor(Value)
Retorna o maior inteiro menor ou igual à expressão dado numérico.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Sign" xml:space="preserve">
    <value>Sign(Value)
Retorna o positivo (+1), zero (0), ou sinal (-1) negativo da expressão.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Round" xml:space="preserve">
    <value>Round(Value)
Arredonda o valor dado para o inteiro mais próximo.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Round_2" xml:space="preserve">
    <value>Round(Value, Precision)
Arredonda o valor dado ao número inteiro mais próximo, ou a um número especificado de casas decimais.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Log" xml:space="preserve">
    <value>Log(Value)
Retorna o logaritmo natural de um número especificado.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Log_2" xml:space="preserve">
    <value>Log(Value, Base)
Retorna o logaritmo de um número especificado em uma base especificada.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Log10" xml:space="preserve">
    <value>Log10(Value)
Retorna o logaritmo de base 10 de um número especificado.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Power" xml:space="preserve">
    <value>Power(Value, Power)
Retorna um número especificado elevado a uma potência especificada.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Rnd" xml:space="preserve">
    <value>Rnd()
Retorna um número aleatório que é menor que 1, mas maior ou igual a zero.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToInt" xml:space="preserve">
    <value>ToInt(Value)
Converte valor em um inteiro de 32 bits equivalente assinado.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToLong" xml:space="preserve">
    <value>ToLong(Value)
Converte valor para um inteiro de 64 bits assinado equivalente.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToFloat" xml:space="preserve">
    <value>ToFloat(Value)
Converte valor a um equivalente de 32-bit de precisão simples número de ponto flutuante.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToDouble" xml:space="preserve">
    <value>ToDouble(Value)
Converte valor a um equivalente de 64-bit de precisão dupla número de ponto flutuante.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToDecimal" xml:space="preserve">
    <value>ToDecimal(Value)
Converte valor para um número decimal equivalente.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_StartsWith" xml:space="preserve">
    <value>StartsWith(String, StartString)
Retorna True se o início da String coincide com StartString, caso contrário, False é retornado.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_EndsWith" xml:space="preserve">
    <value>EndsWith(String, EndString)
Retorna True se o final de EndString partidas corda, caso contrário, False é retornado.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Contains" xml:space="preserve">
    <value>Contains(String, SubString)
Retorna True se SubString ocorre dentro da cadeia, caso contrário, False é retornado.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Trim" xml:space="preserve">
    <value>Trim(String)
Remove toda esquerda e à direita caracteres espaço de String.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Len" xml:space="preserve">
    <value>Len(Valor)
Retorna um valor contendo ou o comprimento da string informado ou o número de bytes requerido para armazenar o valor.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Upper" xml:space="preserve">
    <value>Upper(String)
Retorna String em letras maiúsculas.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Lower" xml:space="preserve">
    <value>Lower(String)
Retorna o String em letras minúsculas.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Concat" xml:space="preserve">
    <value>Concat(String1, ... , StringN)
Retorna um valor cadeia de caracteres contendo a concatenação de seqüência atual com quaisquer strings adicionais.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Ascii" xml:space="preserve">
    <value>Ascii(String) 
Retorna o valor do código ASCII do caractere mais à esquerda em uma expressão de caractere.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Reverse" xml:space="preserve">
    <value>Reverse(String)
Inverte a ordem dos elementos dentro de uma seqüência.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToStr" xml:space="preserve">
    <value>ToStr(Value)
Retorna uma representação string de um objeto.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Char" xml:space="preserve">
    <value>Char(Número)
Converte um Código ASCII Inteiro para um caracter.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_CharIndex" xml:space="preserve">
    <value>CharIndex(String1, String2)
Retorna a posição inicial de String1 dentro String2, a partir da posição de caractere zero ao final de uma string.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_CharIndex_3" xml:space="preserve">
    <value>CharIndex(String1, String2, StartLocation)
Retorna a posição inicial de String1 dentro String2, a partir da posição de caractere StartLocation à extremidade de uma string.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_PadLeft" xml:space="preserve">
    <value>PadLeft(String, Length)
Alinha à esquerda caracteres na seqüência definida, preenchendo o seu lado esquerdo, com espaços em branco até um comprimento total especificado.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_PadRight" xml:space="preserve">
    <value>PadRight(String, Length)
Alinha a direita caracteres na seqüência definida, acolchoar o seu lado esquerdo, com espaços em branco até um comprimento total especificado.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_PadLeft_3" xml:space="preserve">
    <value>PadLeft(String, Length, Char)
Alinha à esquerda caracteres na seqüência definida, preenchendo o seu lado esquerdo, com o Char especificado até um comprimento total especificado.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_PadRight_3" xml:space="preserve">
    <value>PadRight(String, Length, Char)
Alinha à direita caracteres na seqüência definida, acolchoar o seu lado esquerdo, com o Char especificado até um comprimento total especificado.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Remove_3" xml:space="preserve">
    <value>Remove(String, StartPosition, Length)
Exclui um número especificado de caracteres a partir deste exemplo, começando em uma posição especificada.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Replace" xml:space="preserve">
    <value>Replace(String, SubString2, String3)
Retorna uma cópia do String1, em que SubString2 foi substituído com string3.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Insert" xml:space="preserve">
    <value>Insert(String1, StartPosition, String2)
Insere string2 em String1 na posição especificada por StartPositon</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Substring" xml:space="preserve">
    <value>Substring(String, StartPosition)
Recupera uma substring da String. A substring começa em StartPosition.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Substring_3" xml:space="preserve">
    <value>Substring(String, StartPosition, Length)
Recupera uma substring da String. A substring começa em StartPosition e tem o comprimento especificado.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Iif" xml:space="preserve">
    <value>Iif(Expression, TruePart, FalsePart)
Retorna truepart ou falsepart, dependendo da avaliação da expressão booleana.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsNull" xml:space="preserve">
    <value>IsNull(Value)
Retorna True se o valor especificado é NULL.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsNullOrEmpty" xml:space="preserve">
    <value>IsNullOrEmpty(String)
Retorna True se o objeto String especificado é nulo ou uma string vazia, caso contrário, False é retornado.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsThisWeek" xml:space="preserve">
    <value>IsThisWeek(DateTime)
Retorna Verdadeiro se a data especificada é abrangido por esta semana.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsThisMonth" xml:space="preserve">
    <value>IsThisMonth(DateTime)
Retorna True se a data especificada cai dentro do mês atual.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsThisYear" xml:space="preserve">
    <value>IsThisYear(DateTime)
Retorna True se a data especificada cai dentro do corrente ano.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeLastMonth" xml:space="preserve">
    <value>LocalDateTimeLastMonth()
Retorna um valor de data e hora correspondente ao primeiro dia do mês anterior.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeLastYear" xml:space="preserve">
    <value>LocalDateTimeLastYear()
Retorna um valor de data e hora correspondente ao primeiro dia do ano anterior.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeTwoMonthsAway" xml:space="preserve">
    <value>LocalDateTimeTwoMonthsAway()
Retorna um valor de data e hora correspondente ao primeiro dia do mês após avançar.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeTwoYearsAway" xml:space="preserve">
    <value>LocalDateTimeTwoYearsAway()
Retorna um valor de data e hora correspondente ao primeiro dia do ano no outro.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeYearBeforeToday" xml:space="preserve">
    <value>LocalDateTimeYearBeforeToday()
Retorna um valor de data e hora correspondente ao dia um ano atrás.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsJanuary" xml:space="preserve">
    <value>IsJanuary(DateTime)
Retorna True se a data especificada cai dentro Janeiro.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsFebruary" xml:space="preserve">
    <value>IsFebruary(DateTime)
Retorna True se a data especificada cair dentro fevereiro.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsMarch" xml:space="preserve">
    <value>IsMarch(DateTime)
Retorna True se a data especificada cair dentro de marcha</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsApril" xml:space="preserve">
    <value>IsApril(DateTime)
Retorna True se a data especificada cair dentro abril.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsMay" xml:space="preserve">
    <value>IsMay(DateTime)
Retorna True se a data especificada cair dentro maio.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsJune" xml:space="preserve">
    <value>IsJune(DateTime)
Retorna True se a data especificada cair dentro junho.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsJuly" xml:space="preserve">
    <value>IsJuly(DateTime)
Retorna True se a data especificada cair dentro julho.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsAugust" xml:space="preserve">
    <value>IsAugust(DateTime)
Retorna True se a data especificada cair dentro agosto.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsSeptember" xml:space="preserve">
    <value>IsSeptember(DateTime)
Retorna True se a data especificada cair dentro setembro.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsOctober" xml:space="preserve">
    <value>IsOctober(DateTime)
Retorna True se a data especificada cair dentro outubro.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsNovember" xml:space="preserve">
    <value>IsNovember(DateTime)
Retorna True se a data especificada cair dentro novembro.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsDecember" xml:space="preserve">
    <value>IsDecember(DateTime)
Retorna True se a data especificada cair dentro dezembro.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsLastMonth" xml:space="preserve">
    <value>IsLastMonth(DateTime)
Retorna True se a data especificada inscreve-se no mês anterior.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsLastYear" xml:space="preserve">
    <value>IsLastYear(DateTime)
Retorna True se a data especificada inscreve-se no ano anterior.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsNextMonth" xml:space="preserve">
    <value>IsNextMonth(DateTime)
Retorna True se a data especificada inscreve-se no próximo mês.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsNextYear" xml:space="preserve">
    <value>IsNextYear(DateTime)
Retorna True se a data especificada cai dentro de um ano.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsYearToDate" xml:space="preserve">
    <value>IsYearToDate(DateTime)
Retorna True se a data especificada cai dentro do período de ano-to-date (a partir do primeiro dia do ano em curso e continuando até a data atual).</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsSameDay" xml:space="preserve">
    <value>IsSameDay (DateTime, DateTime)
Retorna True se os valores de data e hora especificados estiverem incluídas no mesmo dia.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeDayAfterTomorrow" xml:space="preserve">
    <value>LocalDateTimeDayAfterTomorrow()
Retorna um valor de data e hora correspondente para depois de amanhã.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeLastWeek" xml:space="preserve">
    <value>LocalDateTimeLastWeek()
Retorna um valor de data e hora correspondente ao primeiro dia da semana anterior.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeNextMonth" xml:space="preserve">
    <value>LocalDateTimeNextMonth()
Retorna um valor de data e hora correspondente ao primeiro dia do próximo mês.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeNextWeek" xml:space="preserve">
    <value>LocalDateTimeNextWeek()
Retorna um valor de data-hora correspondente ao primeiro dia da semana seguinte.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeNextYear" xml:space="preserve">
    <value>LocalDateTimeNextYear()
Retorna um valor de data-hora correspondente ao primeiro dia do ano seguinte.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeNow" xml:space="preserve">
    <value>LocalDateTimeNow()
Retorna um valor de data e hora correspondente ao momento atual no tempo.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeThisMonth" xml:space="preserve">
    <value>LocalDateTimeThisMonth()
Retorna um valor de data e hora correspondente ao primeiro dia do mês em curso.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeThisWeek" xml:space="preserve">
    <value>LocalDateTimeThisWeek()
Retorna um valor de data e hora correspondente ao primeiro dia da semana atual.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeThisYear" xml:space="preserve">
    <value>LocalDateTimeThisYear()
Retorna um valor de data e hora correspondente ao primeiro dia do ano em curso.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeToday" xml:space="preserve">
    <value>LocalDateTimeToday()
Retorna um valor de data e hora correspondente ao Hoje.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeTomorrow" xml:space="preserve">
    <value>LocalDateTimeTomorrow()
Retorna um valor de data e hora correspondente ao Amanhã.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeTwoWeeksAway" xml:space="preserve">
    <value>LocalDateTimeTwoWeeksAway()
Retorna um valor de data e hora correspondente ao primeiro dia da semana em que é depois de na próxima semana.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeYesterday" xml:space="preserve">
    <value>LocalDateTimeYesterday()
Retorna um valor de data e hora correspondente ao dia de ontem.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddTicks" xml:space="preserve">
    <value>AddTicks (DateTime, TicksCount) 
Retorna um valor de data e hora que é o número especificado de pulsos longe do especificado DateTime.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddMilliSeconds" xml:space="preserve">
    <value>AddMilliSeconds (DateTime, MilliSecondsCount) 
Retorna um valor de data e hora que é o número especificado de milissegundos longe do especificado DateTime.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddSeconds" xml:space="preserve">
    <value>AddSeconds (DateTime, SecondsCount) 
Retorna um valor de data e hora que é o número especificado de segundos de distância do especificado DateTime.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddMinutes" xml:space="preserve">
    <value>AddMinutes (DateTime, MinutesCount) 
Retorna um valor de data e hora que é o número especificado de minutos do especificado DateTime.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddHours" xml:space="preserve">
    <value>AddHours (DateTime, HoursCount) 
Retorna um valor de data e hora que é o número de horas de distância do especificado DateTime.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddDays" xml:space="preserve">
    <value>AddDays (DateTime, DaysCount) 
Retorna um valor de data e hora que é o número especificado de dias longe do especificado DateTime.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddMonths" xml:space="preserve">
    <value>AddMonths (DateTime, MonthsCount) 
Retorna um valor de data e hora que é o número especificado de meses longe do especificado DateTime.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddYears" xml:space="preserve">
    <value>AddYears (DateTime, YearsCount) 
Retorna um valor de data e hora que é o número especificado de anos longe do DateTime specieid.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddTimeSpan" xml:space="preserve">
    <value>AddTimeSpan(DateTime, TimeSpan) 
Retorna um valor de data e hora que está longe do DateTime especificado para a determinado TimeSpan.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffDay" xml:space="preserve">
    <value>DateDiffDay(startDate, endDate)
Retorna o número de limites de dias entre duas datas não anuláveis​​.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffHour" xml:space="preserve">
    <value>DateDiffHour(startDate, endDate)
Retorna o número de limites de horas entre duas datas não anuláveis​​.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffMilliSecond" xml:space="preserve">
    <value>DateDiffMilliSecond(startDate, endDate)
Retorna o número de limites de milissegundos entre duas datas não anuláveis​​.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffMinute" xml:space="preserve">
    <value>DateDiffMinute(startDate, endDate)
Retorna o número de limites de minutos entre duas datas não anuláveis​​.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffMonth" xml:space="preserve">
    <value>DateDiffMonth(startDate, endDate)
Retorna o número de limites de meses entre duas datas não anuláveis​​.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffSecond" xml:space="preserve">
    <value>DateDiffSecond(startDate, endDate)
Retorna o número de limites de segunda entre duas datas não anuláveis​​.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffTick" xml:space="preserve">
    <value>DateDiffTick(startDate, endDate)
Retorna o número de limites de carrapato entre duas datas não anuláveis​​.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffYear" xml:space="preserve">
    <value>DateDiffYear(startDate, endDate)
Retorna o número de limites de anos entre duas datas não anuláveis​​.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetDate" xml:space="preserve">
    <value>GetDate(DateTime)
Extrai uma data no DateTime definido.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetDay" xml:space="preserve">
    <value>GetDay(DateTime)
Extrai um dia do DateTime definido.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetDayOfWeek" xml:space="preserve">
    <value>GetDayOfWeek(DateTime)
Extrai um dia da semana a partir do DateTime definido.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetDayOfYear" xml:space="preserve">
    <value>GetDayOfYear(DateTime)
Extrai um dia do ano de DateTime definido.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetMilliSecond" xml:space="preserve">
    <value>GetMilliSecond(DateTime)
Extrai milissegundos do DateTime definido.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetMinute" xml:space="preserve">
    <value>GetMinute(DateTime)
Extrai minutos do DateTime definido.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetMonth" xml:space="preserve">
    <value>GetMonth(DateTime)
Extrai um mês a partir da DateTime definido.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetSecond" xml:space="preserve">
    <value>GetSecond(DateTime)
Extrai segundos do DateTime definido.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetTimeOfDay" xml:space="preserve">
    <value>GetTimeOfDay(DateTime)
Extrai a hora do dia, a partir do DateTime definida, em escalas.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetYear" xml:space="preserve">
    <value>GetYear(DateTime)
Extrai um ano a partir da DateTime definido.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetHour" xml:space="preserve">
    <value>GetHour(DateTime)
Extrai uma hora do DateTime definido.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Now" xml:space="preserve">
    <value>Now()
Retorna a data e a hora atual do sistema.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Today" xml:space="preserve">
    <value>Today()
Retorna a data atual. Independentemente do tempo real, esta função retorna a meia-noite da data atual.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_UtcNow" xml:space="preserve">
    <value>UtcNow()
Retorna a data atual do sistema e tempo, expresso em Tempo Universal Coordenado (UTC).</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AvgAggregate" xml:space="preserve">
    <value>Avg(Value)
Avalia a média dos valores na coleção.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_CountAggregate" xml:space="preserve">
    <value>Count()
Retorna o número de objetos em uma coleção.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ExistsAggregate" xml:space="preserve">
    <value>Exists()
Determina se o objeto existe na coleção.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_MaxAggregate" xml:space="preserve">
    <value>Max(Value)
Retorna o valor da expressão máxima em uma coleção.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_MinAggregate" xml:space="preserve">
    <value>Min(Value)
Retorna o valor mínimo de expressão em uma coleção.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_SumAggregate" xml:space="preserve">
    <value>Sum(Valor)
Retorna a soma de todos os valores de expressão na coleção.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_SingleAggregate" xml:space="preserve">
    <value>Single()
Retorna um único objeto da coleção.</value>
  </data>
  <data name="ExpressionEditorStringId.Exception_MalformedProperty" xml:space="preserve">
    <value>Nome da propriedade malformado: falta de fechamento "{0}".</value>
  </data>
  <data name="ExpressionEditorStringId.Exception_SyntaxError" xml:space="preserve">
    <value>Erro de sintaxe.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_NewLine" xml:space="preserve">
    <value>NewLine()

Retorna a sequência de caracteres de nova linha definida para este ambiente.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_FormatString" xml:space="preserve">
    <value>FormatString (formato, valor1,..., nossa)

Retorna a sequência de caracteres especificada com valores de campo formatado.
Esta função pode aceitar qualquer número de argumentos.

Exemplo:

FormatString('{0} - {1:c}', [Coluna1], [Coluna2])</value>
  </data>
</root>