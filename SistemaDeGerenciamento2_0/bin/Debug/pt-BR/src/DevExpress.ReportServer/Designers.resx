<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"></xsd:import>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Dashboard_Dashboard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="Dashboard_NotSaved" xml:space="preserve">
    <value>The dashboard was not saved.</value>
  </data>
  <data name="Dashboard_Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="Dashboard_ExportToXml" xml:space="preserve">
    <value>Export to XML</value>
  </data>
  <data name="Dashboard_ImportFromXml" xml:space="preserve">
    <value>Import from XML</value>
  </data>
  <data name="Dashboard_New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="Dashboard_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Dashboard_Saved" xml:space="preserve">
    <value>The dashboard was saved successfully.</value>
  </data>
  <data name="Dashboard_Save_DialogTitle" xml:space="preserve">
    <value>Save Dashboard</value>
  </data>
  <data name="Dashboard_SaveNew_DialogTitle" xml:space="preserve">
    <value>Save New Dashboard</value>
  </data>
  <data name="Dashboard_SaveAs" xml:space="preserve">
    <value>Save As</value>
  </data>
  <data name="Dashboard_SaveAs_DialogTitle" xml:space="preserve">
    <value>Save Dashboard As</value>
  </data>
  <data name="Dashboard_Saving" xml:space="preserve">
    <value>Saving the dashboard</value>
  </data>
  <data name="Dashboard_SaveBeforeExprort" xml:space="preserve">
    <value>Please save the dashboard before export.</value>
  </data>
  <data name="Dashboard_Save_Error" xml:space="preserve">
    <value>Cannot save dashboard.</value>
  </data>
  <data name="Designer_IsMemberOf" xml:space="preserve">
    <value>IsMemberOf(String) 
    
Returns true if the current user belongs to a group defined by the parameter.</value>
  </data>
  <data name="Designer_UserEmail" xml:space="preserve">
    <value>UserEmail()
    
Returns the current user's email.</value>
  </data>
  <data name="Designer_UserName" xml:space="preserve">
    <value>UserName()
    
Returns the current user's name.</value>
  </data>
  <data name="Document_FileSize_Error" xml:space="preserve">
    <value>The file size should be less than {0}.</value>
  </data>
  <data name="Document_GetCategories_Error" xml:space="preserve">
    <value>Cannot retrieve categories.</value>
  </data>
  <data name="Document_Category_IsRequired" xml:space="preserve">
    <value>A category should be selected.</value>
  </data>
  <data name="Document_Name_NotEmpty" xml:space="preserve">
    <value>The name cannot be empty.</value>
  </data>
  <data name="Document_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Document_Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Document_Category_Placeholder" xml:space="preserve">
    <value>Select a category...</value>
  </data>
  <data name="Document_NoCategories" xml:space="preserve">
    <value>No available categories</value>
  </data>
  <data name="Document_NewCategory" xml:space="preserve">
    <value>New Category</value>
  </data>
  <data name="Document_NewCategory_Placeholder" xml:space="preserve">
    <value>Enter a new category name...</value>
  </data>
  <data name="Document_Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Document_RevisionComment" xml:space="preserve">
    <value>Revision Comment</value>
  </data>
  <data name="Document_SavingChanges_Error" xml:space="preserve">
    <value>Error when saving changes</value>
  </data>
  <data name="AccessDenied" xml:space="preserve">
    <value>Access denied.</value>
  </data>
  <data name="Document_CreateNewCategory" xml:space="preserve">
    <value>Create a new category</value>
  </data>
  <data name="Document_NewCategory_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Document_NewCategory_Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="Report_Import_SelectFile" xml:space="preserve">
    <value>Click to select a REPX file</value>
  </data>
  <data name="Report_Import_SelectNewFile" xml:space="preserve">
    <value>Click to select a new REPX file</value>
  </data>
  <data name="Document_Import_Or" xml:space="preserve">
    <value> or</value>
  </data>
  <data name="Document_Import_DropFile" xml:space="preserve">
    <value>drop the file here</value>
  </data>
  <data name="Document_Import_Button" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="Report_ExportToRepx" xml:space="preserve">
    <value>Export to REPX</value>
  </data>
  <data name="Report_ImportFromRepx" xml:space="preserve">
    <value>Import from REPX...</value>
  </data>
  <data name="Report_SaveBeforeExport" xml:space="preserve">
    <value>Please save the report before export.</value>
  </data>
  <data name="Report_SaveNew_DialogTitle" xml:space="preserve">
    <value>Save New Report</value>
  </data>
  <data name="Report_Save_DialogTitle" xml:space="preserve">
    <value>Save Report</value>
  </data>
  <data name="Report_SaveAs_DialogTitle" xml:space="preserve">
    <value>Save Report As</value>
  </data>
  <data name="Report_UnsavedChanges_Message" xml:space="preserve">
    <value>This page contains unsaved changes. Are you sure you want to leave?</value>
  </data>
  <data name="Report_Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="Report_Import_DialogTitle" xml:space="preserve">
    <value>Import Report</value>
  </data>
  <data name="Dialog_OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Dialog_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Dashboard_Import_SelectFile" xml:space="preserve">
    <value>Click to select an XML file</value>
  </data>
  <data name="Dashboard_Import_SelectNewFile" xml:space="preserve">
    <value>Click to select a new XML file</value>
  </data>
  <data name="Designer_IsMemberOf_Name" xml:space="preserve">
    <value>Is member of</value>
  </data>
  <data name="Designer_UserEmail_Name" xml:space="preserve">
    <value>UserEmail</value>
  </data>
  <data name="Designer_UserName_Name" xml:space="preserve">
    <value>UserName</value>
  </data>
  <data name="Designer_UserSpecificFunctions" xml:space="preserve">
    <value>User-Specific Functions</value>
  </data>
  <data name="Report_Wizard_ChooseDataModel" xml:space="preserve">
    <value>Choose data model</value>
  </data>
  <data name="Report_Save_Error" xml:space="preserve">
    <value>Cannot save report.</value>
  </data>
</root>