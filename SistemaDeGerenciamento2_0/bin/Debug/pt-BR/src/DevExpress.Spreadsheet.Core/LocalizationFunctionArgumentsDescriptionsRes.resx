<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"></xsd:import>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CountValue1" xml:space="preserve">
    <value>are 1 to 255 arguments that can contain or refer to a variety of different types of data, but only numbers are counted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CountValue2" xml:space="preserve">
    <value>are 1 to 255 arguments that can contain or refer to a variety of different types of data, but only numbers are counted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IfLogicaltest" xml:space="preserve">
    <value>is any value or expression that can be evaluated to TRUE or FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IfValueiftrue" xml:space="preserve">
    <value>is the value that is returned if Logical_test is TRUE. If omitted, TRUE is returned. You can nest up to seven IF functions</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IfValueiffalse" xml:space="preserve">
    <value>is the value that is returned if Logical_test is FALSE. If omitted, FALSE is returned</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsNAValue" xml:space="preserve">
    <value>is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsErrorValue" xml:space="preserve">
    <value>is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumNumber1" xml:space="preserve">
    <value>are 1 to 255 numbers to sum. Logical values and text are ignored in cells, included if typed as arguments</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumNumber2" xml:space="preserve">
    <value>are 1 to 255 numbers to sum. Logical values and text are ignored in cells, included if typed as arguments</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AverageNumber1" xml:space="preserve">
    <value>are 1 to 255 numeric arguments for which you want the average</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AverageNumber2" xml:space="preserve">
    <value>are 1 to 255 numeric arguments for which you want the average</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MinNumber1" xml:space="preserve">
    <value>are 1 to 255 numbers, empty cells, logical values, or text numbers for which you want the minimum</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MinNumber2" xml:space="preserve">
    <value>are 1 to 255 numbers, empty cells, logical values, or text numbers for which you want the minimum</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MaxNumber1" xml:space="preserve">
    <value>are 1 to 255 numbers, empty cells, logical values, or text numbers for which you want the maximum</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MaxNumber2" xml:space="preserve">
    <value>are 1 to 255 numbers, empty cells, logical values, or text numbers for which you want the maximum</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RowReference" xml:space="preserve">
    <value>is the cell or a single range of cells for which you want the row number; if omitted, returns the cell containing the ROW function</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ColumnReference" xml:space="preserve">
    <value>is the cell or range of contiguous cells for which you want the column number. If omitted, the cell containing the COLUMN function is used</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NpvRate" xml:space="preserve">
    <value>is the rate of discount over the length of one period</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NpvValue1" xml:space="preserve">
    <value>are 1 to 254 payments and income, equally spaced in time and occurring at the end of each period</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NpvValue2" xml:space="preserve">
    <value>are 1 to 254 payments and income, equally spaced in time and occurring at the end of each period</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.StDevNumber1" xml:space="preserve">
    <value>are 1 to 255 numbers corresponding to a sample of a population and can be numbers or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.StDevNumber2" xml:space="preserve">
    <value>are 1 to 255 numbers corresponding to a sample of a population and can be numbers or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DollarNumber" xml:space="preserve">
    <value>is a number, a reference to a cell containing a number, or a formula that evaluates to a number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DollarDecimals" xml:space="preserve">
    <value>is the number of digits to the right of the decimal point. The number is rounded as necessary; if omitted, Decimals = 2</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FixedNumber" xml:space="preserve">
    <value>is the number you want to round and convert to text</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FixedDecimals" xml:space="preserve">
    <value>is the number of digits to the right of the decimal point. If omitted, Decimals = 2</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FixedNocommas" xml:space="preserve">
    <value>is a logical value: do not display commas in the returned text = TRUE; do display commas in the returned text = FALSE or omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SinNumber" xml:space="preserve">
    <value>is the angle in radians for which you want the sine. Degrees * PI()/180 = radians</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CosNumber" xml:space="preserve">
    <value>is the angle in radians for which you want the cosine</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TanNumber" xml:space="preserve">
    <value>is the angle in radians for which you want the tangent. Degrees * PI()/180 = radians</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ATanNumber" xml:space="preserve">
    <value>is the tangent of the angle you want</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SqrtNumber" xml:space="preserve">
    <value>is the number for which you want the square root</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ExpNumber" xml:space="preserve">
    <value>is the exponent applied to the base e. The constant e equals 2.71828182845904, the base of the natural logarithm</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LnNumber" xml:space="preserve">
    <value>is the positive real number for which you want the natural logarithm</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Log10Number" xml:space="preserve">
    <value>is the positive real number for which you want the base-10 logarithm</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AbsNumber" xml:space="preserve">
    <value>is the real number for which you want the absolute value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IntNumber" xml:space="preserve">
    <value>is the real number you want to round down to an integer</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SignNumber" xml:space="preserve">
    <value>is any real number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RoundNumber" xml:space="preserve">
    <value>is the number you want to round</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RoundNumdigits" xml:space="preserve">
    <value>is the number of digits to which you want to round. Negative rounds to the left of the decimal point; zero to the nearest integer</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LookupLookupvalue" xml:space="preserve">
    <value>is a value that LOOKUP searches for in Lookup_vector and can be a number, text, a logical value, or a name or reference to a value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LookupLookupvector" xml:space="preserve">
    <value>is a range that contains only one row or one column of text, numbers, or logical values, placed in ascending order</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LookupResultvector" xml:space="preserve">
    <value>is a range that contains only one row or column, the same size as Lookup_vector</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IndexArray" xml:space="preserve">
    <value>is a range of cells or an array constant.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IndexRownum" xml:space="preserve">
    <value>selects the row in Array or Reference from which to return a value. If omitted, Column_num is required</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IndexColumnnum" xml:space="preserve">
    <value>selects the column in Array or Reference from which to return a value. If omitted, Row_num is required</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ReptText" xml:space="preserve">
    <value>is the text you want to repeat</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ReptNumbertimes" xml:space="preserve">
    <value>is a positive number specifying the number of times to repeat text</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MidText" xml:space="preserve">
    <value>is the text string from which you want to extract the characters</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MidStartnum" xml:space="preserve">
    <value>is the position of the first character you want to extract. The first character in Text is 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MidNumchars" xml:space="preserve">
    <value>specifies how many characters to return from Text</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LenText" xml:space="preserve">
    <value>is the text whose length you want to find. Spaces count as characters</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ValueText" xml:space="preserve">
    <value>is the text enclosed in quotation marks or a reference to a cell containing the text you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AndLogical1" xml:space="preserve">
    <value>are 1 to 255 conditions you want to test that can be either TRUE or FALSE and can be logical values, arrays, or references</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AndLogical2" xml:space="preserve">
    <value>are 1 to 255 conditions you want to test that can be either TRUE or FALSE and can be logical values, arrays, or references</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OrLogical1" xml:space="preserve">
    <value>are 1 to 255 conditions that you want to test that can be either TRUE or FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OrLogical2" xml:space="preserve">
    <value>are 1 to 255 conditions that you want to test that can be either TRUE or FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NotLogical" xml:space="preserve">
    <value>is a value or expression that can be evaluated to TRUE or FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ModNumber" xml:space="preserve">
    <value>is the number for which you want to find the remainder after the division is performed</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ModDivisor" xml:space="preserve">
    <value>is the number by which you want to divide Number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DCountDatabase" xml:space="preserve">
    <value>is the range of cells that makes up the list or database. A database is a list of related data</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DCountField" xml:space="preserve">
    <value>is either the label of the column in double quotation marks or a number that represents the column's position in the list</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DCountCriteria" xml:space="preserve">
    <value>is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DSumDatabase" xml:space="preserve">
    <value>is the range of cells that makes up the list or database. A database is a list of related data</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DSumField" xml:space="preserve">
    <value>is either the label of the column in double quotation marks or a number that represents the column's position in the list</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DSumCriteria" xml:space="preserve">
    <value>is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DAverageDatabase" xml:space="preserve">
    <value>is the range of cells that makes up the list or database. A database is a list of related data</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DAverageField" xml:space="preserve">
    <value>is either the label of the column in double quotation marks or a number that represents the column's position in the list</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DAverageCriteria" xml:space="preserve">
    <value>is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DMinDatabase" xml:space="preserve">
    <value>is the range of cells that makes up the list or database. A database is a list of related data</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DMinField" xml:space="preserve">
    <value>is either the label of the column in double quotation marks or a number that represents the column's position in the list</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DMinCriteria" xml:space="preserve">
    <value>is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DMaxDatabase" xml:space="preserve">
    <value>is the range of cells that makes up the list or database. A database is a list of related data</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DMaxField" xml:space="preserve">
    <value>is either the label of the column in double quotation marks or a number that represents the column's position in the list</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DMaxCriteria" xml:space="preserve">
    <value>is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DStDevDatabase" xml:space="preserve">
    <value>is the range of cells that makes up the list or database. A database is a list of related data</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DStDevField" xml:space="preserve">
    <value>is either the label of the column in double quotation marks or a number that represents the column's position in the list</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DStDevCriteria" xml:space="preserve">
    <value>is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VarNumber1" xml:space="preserve">
    <value>are 1 to 255 numeric arguments corresponding to a sample of a population</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VarNumber2" xml:space="preserve">
    <value>are 1 to 255 numeric arguments corresponding to a sample of a population</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DVarDatabase" xml:space="preserve">
    <value>is the range of cells that makes up the list or database. A database is a list of related data</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DVarField" xml:space="preserve">
    <value>is either the label of the column in double quotation marks or a number that represents the column's position in the list</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DVarCriteria" xml:space="preserve">
    <value>is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TextValue" xml:space="preserve">
    <value>is a number, a formula that evaluates to a numeric value, or a reference to a cell containing a numeric value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TextFormattext" xml:space="preserve">
    <value>is a number format in text form from the Category box on the Number tab in the Format Cells dialog box (not General)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LinestKnownys" xml:space="preserve">
    <value>is the set of y-values you already know in the relationship y = mx + b</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LinestKnownxs" xml:space="preserve">
    <value>is an optional set of x-values that you may already know in the relationship y = mx + b</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LinestConst" xml:space="preserve">
    <value>is a logical value: the constant b is calculated normally if Const = TRUE or omitted; b is set equal to 0 if Const = FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LinestStats" xml:space="preserve">
    <value>is a logical value: return additional regression statistics = TRUE; return m-coefficients and the constant b = FALSE or omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TrendKnownys" xml:space="preserve">
    <value>is a range or array of y-values you already know in the relationship y = mx + b</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TrendKnownxs" xml:space="preserve">
    <value>is an optional range or array of x-values that you know in the relationship y = mx + b, an array the same size as Known_y's</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TrendNewxs" xml:space="preserve">
    <value>is a range or array of new x-values for which you want TREND to return corresponding y-values</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TrendConst" xml:space="preserve">
    <value>is a logical value: the constant b is calculated normally if Const = TRUE or omitted; b is set equal to 0 if Const = FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogestKnownys" xml:space="preserve">
    <value>is the set of y-values you already know in the relationship y = b*m^x</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogestKnownxs" xml:space="preserve">
    <value>is an optional set of x-values that you may already know in the relationship y = b*m^x</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogestConst" xml:space="preserve">
    <value>is a logical value: the constant b is calculated normally if Const = TRUE or omitted; b is set equal to 1 if Const = FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogestStats" xml:space="preserve">
    <value>is a logical value: return additional regression statistics = TRUE; return m-coefficients and the constant b = FALSE or omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GrowthKnownys" xml:space="preserve">
    <value>is the set of y-values you already know in the relationship y = b*m^x, an array or range of positive numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GrowthKnownxs" xml:space="preserve">
    <value>is an optional set of x-values that you may already know in the relationship y = b*m^x, an array or range the same size as Known_y's</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GrowthNewxs" xml:space="preserve">
    <value>are new x-values for which you want GROWTH to return corresponding y-values</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GrowthConst" xml:space="preserve">
    <value>is a logical value: the constant b is calculated normally if Const = TRUE; b is set equal to 1 if Const = FALSE or omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PvRate" xml:space="preserve">
    <value>is the interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PvNper" xml:space="preserve">
    <value>is the total number of payment periods in an investment</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PvPmt" xml:space="preserve">
    <value>is the payment made each period and cannot change over the life of the investment</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PvFv" xml:space="preserve">
    <value>is the future value, or a cash balance you want to attain after the last payment is made</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PvType" xml:space="preserve">
    <value>is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FvRate" xml:space="preserve">
    <value>is the interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FvNper" xml:space="preserve">
    <value>is the total number of payment periods in the investment</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FvPmt" xml:space="preserve">
    <value>is the payment made each period; it cannot change over the life of the investment</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FvPv" xml:space="preserve">
    <value>is the present value, or the lump-sum amount that a series of future payments is worth now. If omitted, Pv = 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FvType" xml:space="preserve">
    <value>is a value representing the timing of payment: payment at the beginning of the period = 1; payment at the end of the period = 0 or omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NPerRate" xml:space="preserve">
    <value>is the interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NPerPmt" xml:space="preserve">
    <value>is the payment made each period; it cannot change over the life of the investment</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NPerPv" xml:space="preserve">
    <value>is the present value, or the lump-sum amount that a series of future payments is worth now</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NPerFv" xml:space="preserve">
    <value>is the future value, or a cash balance you want to attain after the last payment is made. If omitted, zero is used</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NPerType" xml:space="preserve">
    <value>is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PmtRate" xml:space="preserve">
    <value>is the interest rate per period for the loan. For example, use 6%/4 for quarterly payments at 6% APR</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PmtNper" xml:space="preserve">
    <value>is the total number of payments for the loan</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PmtPv" xml:space="preserve">
    <value>is the present value: the total amount that a series of future payments is worth now</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PmtFv" xml:space="preserve">
    <value>is the future value, or a cash balance you want to attain after the last payment is made, 0 (zero) if omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PmtType" xml:space="preserve">
    <value>is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RateNper" xml:space="preserve">
    <value>is the total number of payment periods for the loan or investment</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RatePmt" xml:space="preserve">
    <value>is the payment made each period and cannot change over the life of the loan or investment</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RatePv" xml:space="preserve">
    <value>is the present value: the total amount that a series of future payments is worth now</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RateFv" xml:space="preserve">
    <value>is the future value, or a cash balance you want to attain after the last payment is made. If omitted, uses Fv = 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RateType" xml:space="preserve">
    <value>is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RateGuess" xml:space="preserve">
    <value>is your guess for what the rate will be; if omitted, Guess = 0.1 (10 percent)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MirrValues" xml:space="preserve">
    <value>is an array or a reference to cells that contain numbers that represent a series of payments (negative) and income (positive) at regular periods</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MirrFinancerate" xml:space="preserve">
    <value>is the interest rate you pay on the money used in the cash flows</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MirrReinvestrate" xml:space="preserve">
    <value>is the interest rate you receive on the cash flows as you reinvest them</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IrrValues" xml:space="preserve">
    <value>is an array or a reference to cells that contain numbers for which you want to calculate the internal rate of return</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IrrGuess" xml:space="preserve">
    <value>is a number that you guess is close to the result of IRR; 0.1 (10 percent) if omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MatchLookupvalue" xml:space="preserve">
    <value>is the value you use to find the value you want in the array, a number, text, or logical value, or a reference to one of these</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MatchLookuparray" xml:space="preserve">
    <value>is a contiguous range of cells containing possible lookup values, an array of values, or a reference to an array</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MatchMatchtype" xml:space="preserve">
    <value>is a number 1, 0, or -1 indicating which value to return.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DateYear" xml:space="preserve">
    <value>is a number from 1900 to 9999 in Spreadsheet for Windows or from 1904 to 9999 in Spreadsheet for the Macintosh</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DateMonth" xml:space="preserve">
    <value>is a number from 1 to 12 representing the month of the year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DateDay" xml:space="preserve">
    <value>is a number from 1 to 31 representing the day of the month</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TimeHour" xml:space="preserve">
    <value>is a number from 0 to 23 representing the hour</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TimeMinute" xml:space="preserve">
    <value>is a number from 0 to 59 representing the minute</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TimeSecond" xml:space="preserve">
    <value>is a number from 0 to 59 representing the second</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DaySerialnumber" xml:space="preserve">
    <value>is a number in the date-time code used by Spreadsheet</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MonthSerialnumber" xml:space="preserve">
    <value>is a number in the date-time code used by Spreadsheet</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YearSerialnumber" xml:space="preserve">
    <value>is a number in the date-time code used by Spreadsheet</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WeekDaySerialnumber" xml:space="preserve">
    <value>is a number that represents a date</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WeekDayReturntype" xml:space="preserve">
    <value>is a number: for Sunday=1 through Saturday=7, use 1; for Monday=1 through Sunday=7, use 2; for Monday=0 through Sunday=6, use 3</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HourSerialnumber" xml:space="preserve">
    <value>is a number in the date-time code used by Spreadsheet, or text in time format, such as 16:48:00 or 4:48:00 PM</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MinuteSerialnumber" xml:space="preserve">
    <value>is a number in the date-time code used by Spreadsheet or text in time format, such as 16:48:00 or 4:48:00 PM</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SecondSerialnumber" xml:space="preserve">
    <value>is a number in the date-time code used by Spreadsheet or text in time format, such as 16:48:23 or 4:48:47 PM</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AreasReference" xml:space="preserve">
    <value>is a reference to a cell or range of cells and can refer to multiple areas</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RowsArray" xml:space="preserve">
    <value>is an array, an array formula, or a reference to a range of cells for which you want the number of rows</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ColumnsArray" xml:space="preserve">
    <value>is an array or array formula, or a reference to a range of cells for which you want the number of columns</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OffsetReference" xml:space="preserve">
    <value>is the reference from which you want to base the offset, a reference to a cell or range of adjacent cells</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OffsetRows" xml:space="preserve">
    <value>is the number of rows, up or down, that you want the upper-left cell of the result to refer to</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OffsetCols" xml:space="preserve">
    <value>is the number of columns, to the left or right, that you want the upper-left cell of the result to refer to</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OffsetHeight" xml:space="preserve">
    <value>is the height, in number of rows, that you want the result to be, the same height as Reference if omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OffsetWidth" xml:space="preserve">
    <value>is the width, in number of columns, that you want the result to be, the same width as Reference if omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SearchFindtext" xml:space="preserve">
    <value>is the text you want to find. You can use the ? and * wildcard characters; use ~? and ~* to find the ? and * characters</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SearchWithintext" xml:space="preserve">
    <value>is the text in which you want to search for Find_text</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SearchStartnum" xml:space="preserve">
    <value>is the character number in Within_text, counting from the left, at which you want to start searching. If omitted, 1 is used</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TransposeArray" xml:space="preserve">
    <value>is a range of cells on a worksheet or an array of values that you want to transpose</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TypeValue" xml:space="preserve">
    <value>can be any value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ATan2Xnum" xml:space="preserve">
    <value>is the x-coordinate of the point</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ATan2Ynum" xml:space="preserve">
    <value>is the y-coordinate of the point</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ASinNumber" xml:space="preserve">
    <value>is the sine of the angle you want and must be from -1 to 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ACosNumber" xml:space="preserve">
    <value>is the cosine of the angle you want and must be from -1 to 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChooseIndexnum" xml:space="preserve">
    <value>specifies which value argument is selected. Index_num must be between 1 and 254, or a formula or a reference to a number between 1 and 254</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChooseValue1" xml:space="preserve">
    <value>are 1 to 254 numbers, cell references, defined names, formulas, functions, or text arguments from which CHOOSE selects</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChooseValue2" xml:space="preserve">
    <value>are 1 to 254 numbers, cell references, defined names, formulas, functions, or text arguments from which CHOOSE selects</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HLookupLookupvalue" xml:space="preserve">
    <value>is the value to be found in the first row of the table and can be a value, a reference, or a text string</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HLookupTablearray" xml:space="preserve">
    <value>is a table of text, numbers, or logical values in which data is looked up. Table_array can be a reference to a range or a range name</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HLookupRowindexnum" xml:space="preserve">
    <value>is the row number in table_array from which the matching value should be returned. The first row of values in the table is row 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HLookupRangelookup" xml:space="preserve">
    <value>is a logical value: to find the closest match in the top row (sorted in ascending order) = TRUE or omitted; find an exact match = FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VLookupLookupvalue" xml:space="preserve">
    <value>is the value to be found in the first column of the table, and can be a value, a reference, or a text string</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VLookupTablearray" xml:space="preserve">
    <value>is a table of text, numbers, or logical values, in which data is retrieved. Table_array can be a reference to a range or a range name</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VLookupColindexnum" xml:space="preserve">
    <value>is the column number in table_array from which the matching value should be returned. The first column of values in the table is column 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VLookupRangelookup" xml:space="preserve">
    <value>is a logical value: to find the closest match in the first column (sorted in ascending order) = TRUE or omitted; find an exact match = FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsRefValue" xml:space="preserve">
    <value>is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogNumber" xml:space="preserve">
    <value>is the positive real number for which you want the logarithm</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogBase" xml:space="preserve">
    <value>is the base of the logarithm; 10 if omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CharNumber" xml:space="preserve">
    <value>is a number between 1 and 255 specifying which character you want</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LowerText" xml:space="preserve">
    <value>is the text you want to convert to lowercase. Characters in Text that are not letters are not changed</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.UpperText" xml:space="preserve">
    <value>is the text you want converted to uppercase, a reference or a text string</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ProperText" xml:space="preserve">
    <value>is text enclosed in quotation marks, a formula that returns text, or a reference to a cell containing text to partially capitalize</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LeftText" xml:space="preserve">
    <value>is the text string containing the characters you want to extract</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LeftNumchars" xml:space="preserve">
    <value>specifies how many characters you want LEFT to extract; 1 if omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RightText" xml:space="preserve">
    <value>is the text string that contains the characters you want to extract</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RightNumchars" xml:space="preserve">
    <value>specifies how many characters you want to extract, 1 if omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ExactText1" xml:space="preserve">
    <value>is the first text string</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ExactText2" xml:space="preserve">
    <value>is the second text string</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TrimText" xml:space="preserve">
    <value>is the text from which you want spaces removed</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ReplaceOldtext" xml:space="preserve">
    <value>is text in which you want to replace some characters</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ReplaceStartnum" xml:space="preserve">
    <value>is the position of the character in Old_text that you want to replace with New_text</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ReplaceNumchars" xml:space="preserve">
    <value>is the number of characters in Old_text that you want to replace</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ReplaceNewtext" xml:space="preserve">
    <value>is the text that will replace characters in Old_text</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SubstituteText" xml:space="preserve">
    <value>is the text or the reference to a cell containing text in which you want to substitute characters</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SubstituteOldtext" xml:space="preserve">
    <value>is the existing text you want to replace. If the case of Old_text does not match the case of text, SUBSTITUTE will not replace the text</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SubstituteNewtext" xml:space="preserve">
    <value>is the text you want to replace Old_text with</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SubstituteInstancenum" xml:space="preserve">
    <value>specifies which occurrence of Old_text you want to replace. If omitted, every instance of Old_text is replaced</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CodeText" xml:space="preserve">
    <value>is the text for which you want the code of the first character</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FindFindtext" xml:space="preserve">
    <value>is the text you want to find. Use double quotes (empty text) to match the first character in Within_text; wildcard characters not allowed</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FindWithintext" xml:space="preserve">
    <value>is the text containing the text you want to find</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FindStartnum" xml:space="preserve">
    <value>specifies the character at which to start the search. The first character in Within_text is character number 1. If omitted, Start_num = 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CellInfotype" xml:space="preserve">
    <value>is a text value that specifies what type of cell information you want.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CellReference" xml:space="preserve">
    <value>is the cell that you want information about</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsErrValue" xml:space="preserve">
    <value>is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsTextValue" xml:space="preserve">
    <value>is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsNumberValue" xml:space="preserve">
    <value>is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsBlankValue" xml:space="preserve">
    <value>is the cell or a name that refers to the cell you want to test</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TValue" xml:space="preserve">
    <value>is the value to test</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NValue" xml:space="preserve">
    <value>is the value you want converted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DateValueDatetext" xml:space="preserve">
    <value>is text that represents a date in a Spreadsheet date format, between 1/1/1900 (Windows) or 1/1/1904 (Macintosh) and 12/31/9999</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TimeValueTimetext" xml:space="preserve">
    <value>is a text string that gives a time in any one of the Spreadsheet time formats (date information in the string is ignored)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SlnCost" xml:space="preserve">
    <value>is the initial cost of the asset</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SlnSalvage" xml:space="preserve">
    <value>is the salvage value at the end of the life of the asset</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SlnLife" xml:space="preserve">
    <value>is the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SydCost" xml:space="preserve">
    <value>is the initial cost of the asset</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SydSalvage" xml:space="preserve">
    <value>is the salvage value at the end of the life of the asset</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SydLife" xml:space="preserve">
    <value>is the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SydPer" xml:space="preserve">
    <value>is the period and must use the same units as Life</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DdbCost" xml:space="preserve">
    <value>is the initial cost of the asset</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DdbSalvage" xml:space="preserve">
    <value>is the salvage value at the end of the life of the asset</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DdbLife" xml:space="preserve">
    <value>is the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DdbPeriod" xml:space="preserve">
    <value>is the period for which you want to calculate the depreciation. Period must use the same units as Life</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DdbFactor" xml:space="preserve">
    <value>is the rate at which the balance declines. If Factor is omitted, it is assumed to be 2 (the double-declining balance method)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IndirectReftext" xml:space="preserve">
    <value>is a reference to a cell that contains an A1- or R1C1-style reference, a name defined as a reference, or a reference to a cell as a text string</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IndirectA1" xml:space="preserve">
    <value>is a logical value that specifies the type of reference in Ref_text: R1C1-style = FALSE; A1-style = TRUE or omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CallRegisterid" xml:space="preserve">
    <value>is the value returned by a previously executed REGISTER or REGISTER.ID function</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CallArgument1" xml:space="preserve">
    <value>are the arguments to be passed to the procedure</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CleanText" xml:space="preserve">
    <value>is any worksheet information from which you want to remove nonprintable characters</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MDetermArray" xml:space="preserve">
    <value>is a numeric array with an equal number of rows and columns, either a cell range or an array constant</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MInverseArray" xml:space="preserve">
    <value>is a numeric array with an equal number of rows and columns, either a cell range or an array constant</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MMultArray1" xml:space="preserve">
    <value>is the first array of numbers to multiply and must have the same number of columns as Array2 has rows</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MMultArray2" xml:space="preserve">
    <value>is the first array of numbers to multiply and must have the same number of columns as Array2 has rows</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IpmtRate" xml:space="preserve">
    <value>is the interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IpmtPer" xml:space="preserve">
    <value>is the period for which you want to find the interest and must be in the range 1 to Nper</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IpmtNper" xml:space="preserve">
    <value>is the total number of payment periods in an investment</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IpmtPv" xml:space="preserve">
    <value>is the present value, or the lump-sum amount that a series of future payments is worth now</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IpmtFv" xml:space="preserve">
    <value>is the future value, or a cash balance you want to attain after the last payment is made. If omitted, Fv = 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IpmtType" xml:space="preserve">
    <value>is a logical value representing the timing of payment: at the end of the period = 0 or omitted, at the beginning of the period = 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PpmtRate" xml:space="preserve">
    <value>is the interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PpmtPer" xml:space="preserve">
    <value>specifies the period and must be in the range 1 to nper</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PpmtNper" xml:space="preserve">
    <value>is the total number of payment periods in an investment</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PpmtPv" xml:space="preserve">
    <value>is the present value: the total amount that a series of future payments is worth now</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PpmtFv" xml:space="preserve">
    <value>is the future value, or cash balance you want to attain after the last payment is made</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PpmtType" xml:space="preserve">
    <value>is a logical value: payment at the beginning of the period = 1; payment at the end of the period = 0 or omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CountAValue1" xml:space="preserve">
    <value>are 1 to 255 arguments representing the values and cells you want to count. Values can be any type of information</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CountAValue2" xml:space="preserve">
    <value>are 1 to 255 arguments representing the values and cells you want to count. Values can be any type of information</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ProductNumber1" xml:space="preserve">
    <value>are 1 to 255 numbers, logical values, or text representations of numbers that you want to multiply</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ProductNumber2" xml:space="preserve">
    <value>are 1 to 255 numbers, logical values, or text representations of numbers that you want to multiply</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FactNumber" xml:space="preserve">
    <value>is the nonnegative number you want the factorial of</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DProductDatabase" xml:space="preserve">
    <value>is the range of cells that makes up the list or database. A database is a list of related data</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DProductField" xml:space="preserve">
    <value>is either the label of the column in double quotation marks or a number that represents the column's position in the list</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DProductCriteria" xml:space="preserve">
    <value>is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsNonTextValue" xml:space="preserve">
    <value>is the value you want tested: a cell; a formula; or a name referring to a cell, formula, or value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.StDevPNumber1" xml:space="preserve">
    <value>are 1 to 255 numbers corresponding to a population and can be numbers or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.StDevPNumber2" xml:space="preserve">
    <value>are 1 to 255 numbers corresponding to a population and can be numbers or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VarPNumber1" xml:space="preserve">
    <value>are 1 to 255 numeric arguments corresponding to a population</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VarPNumber2" xml:space="preserve">
    <value>are 1 to 255 numeric arguments corresponding to a population</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DStDevPDatabase" xml:space="preserve">
    <value>is the range of cells that makes up the list or database. A database is a list of related data</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DStDevPField" xml:space="preserve">
    <value>is either the label of the column in double quotation marks or a number that represents the column's position in the list</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DStDevPCriteria" xml:space="preserve">
    <value>is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DVarPDatabase" xml:space="preserve">
    <value>is the range of cells that makes up the list or database. A database is a list of related data</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DVarPField" xml:space="preserve">
    <value>is either the label of the column in double quotation marks or a number that represents the column's position in the list</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DVarPCriteria" xml:space="preserve">
    <value>is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TruncNumber" xml:space="preserve">
    <value>is the number you want to truncate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TruncNumdigits" xml:space="preserve">
    <value>is a number specifying the precision of the truncation, 0 (zero) if omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsLogicalValue" xml:space="preserve">
    <value>is the value you want to test. Value can refer to a cell, a formula, or a name that refers to a cell, formula, or value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DCountADatabase" xml:space="preserve">
    <value>is the range of cells that makes up the list or database. A database is a list of related data</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DCountAField" xml:space="preserve">
    <value>is either the label of the column in double quotation marks or a number that represents the column's position in the list</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DCountACriteria" xml:space="preserve">
    <value>is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FindBFindtext" xml:space="preserve">
    <value>is the text you want to find</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FindBWithintext" xml:space="preserve">
    <value>is the text containing the text you want to find</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FindBStartnum" xml:space="preserve">
    <value>specifies the character at which to start the search</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SearchBFindtext" xml:space="preserve">
    <value>is the text you want to find</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SearchBWithintext" xml:space="preserve">
    <value>is the text in which you want to search for find_text</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SearchBStartnum" xml:space="preserve">
    <value>is the character number in within_text, counting from the left, at which you want to start searching</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ReplaceBOldtext" xml:space="preserve">
    <value>is text in which you want to replace some characters</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ReplaceBStartnum" xml:space="preserve">
    <value>is the position of the character in old_text that you want to replace with new_text</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ReplaceBNumbytes" xml:space="preserve">
    <value>is the number of characters in old_text that you want to replace with new_text</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ReplaceBNewtext" xml:space="preserve">
    <value>is the text that will replace characters in old_text</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LeftBText" xml:space="preserve">
    <value>is the text string containing the characters you want to extract</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LeftBNumbytes" xml:space="preserve">
    <value>specifies how many characters you want LEFT to return</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RightBText" xml:space="preserve">
    <value>is the text string containing the characters you want to extract</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RightBNumbytes" xml:space="preserve">
    <value>specifies how many characters you want to extract</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MidBText" xml:space="preserve">
    <value>is the text string containing the characters you want to extract</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MidBStartnum" xml:space="preserve">
    <value>is the position of the first character you want to extract in text</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MidBNumbytes" xml:space="preserve">
    <value>specifies how many characters to return from text</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LenBText" xml:space="preserve">
    <value>is the text whose length you want to find</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RoundUpNumber" xml:space="preserve">
    <value>is any real number that you want rounded up</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RoundUpNumdigits" xml:space="preserve">
    <value>is the number of digits to which you want to round. Negative rounds to the left of the decimal point; zero or omitted, to the nearest integer</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RoundDownNumber" xml:space="preserve">
    <value>is any real number that you want rounded down</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RoundDownNumdigits" xml:space="preserve">
    <value>is the number of digits to which you want to round. Negative rounds to the left of the decimal point; zero or omitted, to the nearest integer</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AscText" xml:space="preserve">
    <value>is a text, or a reference to a cell containing a text</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RankNumber" xml:space="preserve">
    <value>is the number for which you want to find the rank</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RankRef" xml:space="preserve">
    <value>is an array of, or a reference to, a list of numbers. Nonnumeric values are ignored</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RankOrder" xml:space="preserve">
    <value>is a number: rank in the list sorted descending = 0 or omitted; rank in the list sorted ascending = any nonzero value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AddressRownum" xml:space="preserve">
    <value>is the row number to use in the cell reference: Row_number = 1 for row 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AddressColumnnum" xml:space="preserve">
    <value>is the column number to use in the cell reference. For example, Column_number = 4 for column D</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AddressAbsnum" xml:space="preserve">
    <value>specifies the reference type: absolute = 1; absolute row/relative column = 2; relative row/absolute column = 3; relative = 4</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AddressA1" xml:space="preserve">
    <value>is a logical value that specifies the reference style: A1 style = 1 or TRUE; R1C1 style = 0 or FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AddressSheettext" xml:space="preserve">
    <value>is text specifying the name of the worksheet to be used as the external reference</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Days360Startdate" xml:space="preserve">
    <value>start_date and end_date are the two dates between which you want to know the number of days</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Days360Enddate" xml:space="preserve">
    <value>start_date and end_date are the two dates between which you want to know the number of days</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Days360Method" xml:space="preserve">
    <value>is a logical value specifying the calculation method: U.S. (NASD) = FALSE or omitted; European = TRUE.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VdbCost" xml:space="preserve">
    <value>is the initial cost of the asset</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VdbSalvage" xml:space="preserve">
    <value>is the salvage value at the end of the life of the asset</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VdbLife" xml:space="preserve">
    <value>is the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VdbStartperiod" xml:space="preserve">
    <value>is the starting period for which you want to calculate the depreciation, in the same units as Life</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VdbEndperiod" xml:space="preserve">
    <value>is the ending period for which you want to calculate the depreciation, in the same units as Life</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VdbFactor" xml:space="preserve">
    <value>is the rate at which the balance declines, 2 (double-declining balance) if omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VdbNoswitch" xml:space="preserve">
    <value>switch to straight-line depreciation when depreciation is greater than the declining balance = FALSE or omitted; do not switch = TRUE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MedianNumber1" xml:space="preserve">
    <value>are 1 to 255 numbers or names, arrays, or references that contain numbers for which you want the median</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MedianNumber2" xml:space="preserve">
    <value>are 1 to 255 numbers or names, arrays, or references that contain numbers for which you want the median</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumProductArray1" xml:space="preserve">
    <value>are 2 to 255 arrays for which you want to multiply and then add components. All arrays must have the same dimensions</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumProductArray2" xml:space="preserve">
    <value>are 2 to 255 arrays for which you want to multiply and then add components. All arrays must have the same dimensions</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumProductArray3" xml:space="preserve">
    <value>are 2 to 255 arrays for which you want to multiply and then add components. All arrays must have the same dimensions</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SinHNumber" xml:space="preserve">
    <value>is any real number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CosHNumber" xml:space="preserve">
    <value>is any real number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TanHNumber" xml:space="preserve">
    <value>is any real number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ASinHNumber" xml:space="preserve">
    <value>is any real number equal to or greater than 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ACosHNumber" xml:space="preserve">
    <value>is any real number equal to or greater than 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ATanHNumber" xml:space="preserve">
    <value>is any real number between -1 and 1 excluding -1 and 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DGetDatabase" xml:space="preserve">
    <value>is the range of cells that makes up the list or database. A database is a list of related data</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DGetField" xml:space="preserve">
    <value>is either the label of the column in double quotation marks or a number that represents the column's position in the list</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DGetCriteria" xml:space="preserve">
    <value>is the range of cells that contains the conditions you specify. The range includes a column label and one cell below the label for a condition</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.InfoTypetext" xml:space="preserve">
    <value>is text specifying what type of information you want returned.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DbCost" xml:space="preserve">
    <value>is the initial cost of the asset</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DbSalvage" xml:space="preserve">
    <value>is the salvage value at the end of the life of the asset</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DbLife" xml:space="preserve">
    <value>is the number of periods over which the asset is being depreciated (sometimes called the useful life of the asset)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DbPeriod" xml:space="preserve">
    <value>is the period for which you want to calculate the depreciation. Period must use the same units as Life</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DbMonth" xml:space="preserve">
    <value>is the number of months in the first year. If month is omitted, it is assumed to be 12</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FrequencyDataarray" xml:space="preserve">
    <value>is an array of or reference to a set of values for which you want to count frequencies (blanks and text are ignored)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FrequencyBinsarray" xml:space="preserve">
    <value>is an array of or reference to intervals into which you want to group the values in data_array</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ErrorTypeErrorval" xml:space="preserve">
    <value>is the error value for which you want the identifying number, and can be an actual error value or a reference to a cell containing an error value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RegisterIdModuletext" xml:space="preserve">
    <value>is text specifying the name of the DLL that contains the function in Spreadsheet for Windows</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RegisterIdProcedure" xml:space="preserve">
    <value>is text specifying the name of the function in the DLL in Spreadsheet for Windows</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RegisterIdTypetext" xml:space="preserve">
    <value>is text encoding input and return data types and can be omitted if the function is already registered.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AvedevNumber1" xml:space="preserve">
    <value>are 1 to 255 arguments for which you want the average of the absolute deviations</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AvedevNumber2" xml:space="preserve">
    <value>are 1 to 255 arguments for which you want the average of the absolute deviations</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaDistCompatibilityX" xml:space="preserve">
    <value>is the value between A and B at which to evaluate the function</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaDistCompatibilityAlpha" xml:space="preserve">
    <value>is a parameter to the distribution and must be greater than 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaDistCompatibilityBeta" xml:space="preserve">
    <value>is a parameter to the distribution and must be greater than 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaDistCompatibilityA" xml:space="preserve">
    <value>is an optional lower bound to the interval of x. If omitted, A = 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaDistCompatibilityB" xml:space="preserve">
    <value>is an optional upper bound to the interval of x. If omitted, B = 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GammaLnX" xml:space="preserve">
    <value>is the value for which you want to calculate GAMMALN, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaInvProbability" xml:space="preserve">
    <value>is a probability associated with the beta distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaInvAlpha" xml:space="preserve">
    <value>is a parameter to the distribution and must be greater than 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaInvBeta" xml:space="preserve">
    <value>is a parameter to the distribution and must be greater than 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaInvA" xml:space="preserve">
    <value>is an optional lower bound to the interval of x. If omitted, A = 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaInvB" xml:space="preserve">
    <value>is an optional upper bound to the interval of x. If omitted, B = 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BinomDistNumbers" xml:space="preserve">
    <value>is the number of successes in trials</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BinomDistTrials" xml:space="preserve">
    <value>is the number of independent trials</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BinomDistProbabilitys" xml:space="preserve">
    <value>is the probability of success on each trial</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BinomDistCumulative" xml:space="preserve">
    <value>is a logical value: for the cumulative distribution function, use TRUE; for the probability mass function, use FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChiDistX" xml:space="preserve">
    <value>is the value at which you want to evaluate the distribution, a nonnegative number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChiDistDegfreedom" xml:space="preserve">
    <value>is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChiInvProbability" xml:space="preserve">
    <value>is a probability associated with the chi-squared distribution, a value between 0 and 1 inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChiInvDegfreedom" xml:space="preserve">
    <value>is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CombinNumber" xml:space="preserve">
    <value>is the total number of items</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CombinNumberchosen" xml:space="preserve">
    <value>is the number of items in each combination</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ConfidenceAlpha" xml:space="preserve">
    <value>is the significance level used to compute the confidence level, a number greater than 0 and less than 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ConfidenceStandarddev" xml:space="preserve">
    <value>is the population standard deviation for the data range and is assumed to be known. Standard_dev must be greater than 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ConfidenceSize" xml:space="preserve">
    <value>is the sample size</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CritBinomTrials" xml:space="preserve">
    <value>is the number of Bernoulli trials</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CritBinomProbabilitys" xml:space="preserve">
    <value>is the probability of success on each trial, a number between 0 and 1 inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CritBinomAlpha" xml:space="preserve">
    <value>is the criterion value, a number between 0 and 1 inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.EvenNumber" xml:space="preserve">
    <value>is the value to round</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ExponDistX" xml:space="preserve">
    <value>is the value of the function, a nonnegative number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ExponDistLambda" xml:space="preserve">
    <value>is the parameter value, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ExponDistCumulative" xml:space="preserve">
    <value>is a logical value for the function to return: the cumulative distribution function = TRUE; the probability density function = FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDistX" xml:space="preserve">
    <value>is the value at which to evaluate the function, a nonnegative number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDistDegfreedom1" xml:space="preserve">
    <value>is the numerator degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDistDegfreedom2" xml:space="preserve">
    <value>is the denominator degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FInvProbability" xml:space="preserve">
    <value>is a probability associated with the F cumulative distribution, a number between 0 and 1 inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FInvDegfreedom1" xml:space="preserve">
    <value>is the numerator degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FInvDegfreedom2" xml:space="preserve">
    <value>is the denominator degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FisherX" xml:space="preserve">
    <value>is the value for which you want the transformation, a number between -1 and 1, excluding -1 and 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FisherInvY" xml:space="preserve">
    <value>is the value for which you want to perform the inverse of the transformation</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FloorNumber" xml:space="preserve">
    <value>is the numeric value you want to round</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FloorSignificance" xml:space="preserve">
    <value>is the multiple to which you want to round. Number and Significance must either both be positive or both be negative</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GammaDistX" xml:space="preserve">
    <value>is the value at which you want to evaluate the distribution, a nonnegative number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GammaDistAlpha" xml:space="preserve">
    <value>is a parameter to the distribution, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GammaDistBeta" xml:space="preserve">
    <value>is a parameter to the distribution, a positive number. If beta = 1, GAMMADIST returns the standard gamma distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GammaDistCumulative" xml:space="preserve">
    <value>is a logical value: return the cumulative distribution function = TRUE; return the probability mass function = FALSE or omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GammaInvProbability" xml:space="preserve">
    <value>is the probability associated with the gamma distribution, a number between 0 and 1, inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GammaInvAlpha" xml:space="preserve">
    <value>is a parameter to the distribution, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GammaInvBeta" xml:space="preserve">
    <value>is a parameter to the distribution, a positive number. If beta = 1, GAMMAINV returns the inverse of the standard gamma distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CeilingNumber" xml:space="preserve">
    <value>is the value you want to round</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CeilingSignificance" xml:space="preserve">
    <value>is the multiple to which you want to round</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HypGeomDistSamples" xml:space="preserve">
    <value>is the number of successes in the sample</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HypGeomDistNumbersample" xml:space="preserve">
    <value>is the size of the sample</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HypGeomDistPopulations" xml:space="preserve">
    <value>is the number of successes in the population</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HypGeomDistNumberpop" xml:space="preserve">
    <value>is the population size</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogNormDistCompatibilityX" xml:space="preserve">
    <value>is the value at which to evaluate the function, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogNormDistCompatibilityMean" xml:space="preserve">
    <value>is the mean of ln(x)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogNormDistCompatibilityStandarddev" xml:space="preserve">
    <value>is the standard deviation of ln(x), a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogInvCompatibilityProbability" xml:space="preserve">
    <value>is a probability associated with the lognormal distribution, a number between 0 and 1, inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogInvCompatibilityMean" xml:space="preserve">
    <value>is the mean of ln(x)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogInvCompatibilityStandarddev" xml:space="preserve">
    <value>is the standard deviation of ln(x), a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NegBinomDistNumberf" xml:space="preserve">
    <value>is the number of failures</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NegBinomDistNumbers" xml:space="preserve">
    <value>is the threshold number of successes</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NegBinomDistProbabilitys" xml:space="preserve">
    <value>is the probability of a success; a number between 0 and 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormDistCompatibilityX" xml:space="preserve">
    <value>is the value for which you want the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormDistCompatibilityMean" xml:space="preserve">
    <value>is the arithmetic mean of the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormDistCompatibilityStandarddev" xml:space="preserve">
    <value>is the standard deviation of the distribution, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormDistCompatibilityCumulative" xml:space="preserve">
    <value>is a logical value: for the cumulative distribution function, use TRUE; for the probability density function, use FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormSDistCompatibilityZ" xml:space="preserve">
    <value>is the value for which you want the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormInvCompatibilityProbability" xml:space="preserve">
    <value>is a probability corresponding to the normal distribution, a number between 0 and 1 inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormInvCompatibilityMean" xml:space="preserve">
    <value>is the arithmetic mean of the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormInvCompatibilityStandarddev" xml:space="preserve">
    <value>is the standard deviation of the distribution, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormSInvCompatibilityProbability" xml:space="preserve">
    <value>is a probability corresponding to the normal distribution, a number between 0 and 1 inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.StandardizeX" xml:space="preserve">
    <value>is the value you want to normalize</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.StandardizeMean" xml:space="preserve">
    <value>is the arithmetic mean of the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.StandardizeStandarddev" xml:space="preserve">
    <value>is the standard deviation of the distribution, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddNumber" xml:space="preserve">
    <value>is the value to round</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PermutNumber" xml:space="preserve">
    <value>is the total number of objects</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PermutNumberchosen" xml:space="preserve">
    <value>is the number of objects in each permutation</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PoissonX" xml:space="preserve">
    <value>is the number of events</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PoissonMean" xml:space="preserve">
    <value>is the expected numeric value, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PoissonCumulative" xml:space="preserve">
    <value>is a logical value: for the cumulative Poisson probability, use TRUE; for the Poisson probability mass function, use FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDistX" xml:space="preserve">
    <value>is the numeric value at which to evaluate the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDistDegfreedom" xml:space="preserve">
    <value>is an integer indicating the number of degrees of freedom that characterize the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDistTails" xml:space="preserve">
    <value>specifies the number of distribution tails to return: one-tailed distribution = 1; two-tailed distribution = 2</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WeibullX" xml:space="preserve">
    <value>is the value at which to evaluate the function, a nonnegative number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WeibullAlpha" xml:space="preserve">
    <value>is a parameter to the distribution, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WeibullBeta" xml:space="preserve">
    <value>is a parameter to the distribution, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WeibullCumulative" xml:space="preserve">
    <value>is a logical value: for the cumulative distribution function, use TRUE; for the probability mass function, use FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumXMY2Arrayx" xml:space="preserve">
    <value>is the first range or array of values and can be a number or name, array, or reference that contains numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumXMY2Arrayy" xml:space="preserve">
    <value>is the second range or array of values and can be a number or name, array, or reference that contains numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumX2MY2Arrayx" xml:space="preserve">
    <value>is the first range or array of numbers and can be a number or name, array, or reference that contains numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumX2MY2Arrayy" xml:space="preserve">
    <value>is the second range or array of numbers and can be a number or name, array, or reference that contains numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumX2PY2Arrayx" xml:space="preserve">
    <value>is the first range or array of numbers and can be a number or name, array, or reference that contains numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumX2PY2Arrayy" xml:space="preserve">
    <value>is the second range or array of numbers and can be a number or name, array, or reference that contains numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChiTestActualrange" xml:space="preserve">
    <value>is the range of data that contains observations to test against expected values</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChiTestExpectedrange" xml:space="preserve">
    <value>is the range of data that contains the ratio of the product of row totals and column totals to the grand total</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CorrelArray1" xml:space="preserve">
    <value>is a cell range of values. The values should be numbers, names, arrays, or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CorrelArray2" xml:space="preserve">
    <value>is a second cell range of values. The values should be numbers, names, arrays, or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CovarArray1" xml:space="preserve">
    <value>is the first cell range of integers and must be numbers, arrays, or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CovarArray2" xml:space="preserve">
    <value>is the second cell range of integers and must be numbers, arrays, or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ForecastX" xml:space="preserve">
    <value>is the data point for which you want to predict a value and must be a numeric value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ForecastKnownys" xml:space="preserve">
    <value>is the dependent array or range of numeric data</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ForecastKnownxs" xml:space="preserve">
    <value>is the independent array or range of numeric data. The variance of Known_x's must not be zero</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FTestArray1" xml:space="preserve">
    <value>is the first array or range of data and can be numbers or names, arrays, or references that contain numbers (blanks are ignored)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FTestArray2" xml:space="preserve">
    <value>is the second array or range of data and can be numbers or names, arrays, or references that contain numbers (blanks are ignored)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.InterceptKnownys" xml:space="preserve">
    <value>is the dependent set of observations or data and can be numbers or names, arrays, or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.InterceptKnownxs" xml:space="preserve">
    <value>is the independent set of observations or data and can be numbers or names, arrays, or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PearsonArray1" xml:space="preserve">
    <value>is a set of independent values</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PearsonArray2" xml:space="preserve">
    <value>is a set of dependent values</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RsqKnownys" xml:space="preserve">
    <value>is an array or range of data points and can be numbers or names, arrays, or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RsqKnownxs" xml:space="preserve">
    <value>is an array or range of data points and can be numbers or names, arrays, or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.StEYXKnownys" xml:space="preserve">
    <value>is an array or range of dependent data points and can be numbers or names, arrays, or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.StEYXKnownxs" xml:space="preserve">
    <value>is an array or range of independent data points and can be numbers or names, arrays, or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SlopeKnownys" xml:space="preserve">
    <value>is an array or cell range of numeric dependent data points and can be numbers or names, arrays, or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SlopeKnownxs" xml:space="preserve">
    <value>is the set of independent data points and can be numbers or names, arrays, or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TTestArray1" xml:space="preserve">
    <value>is the first data set</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TTestArray2" xml:space="preserve">
    <value>is the second data set</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TTestTails" xml:space="preserve">
    <value>specifies the number of distribution tails to return: one-tailed distribution = 1; two-tailed distribution = 2</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TTestType" xml:space="preserve">
    <value>is the kind of t-test: paired = 1, two-sample equal variance (homoscedastic) = 2, two-sample unequal variance = 3</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ProbXrange" xml:space="preserve">
    <value>is the range of numeric values of x with which there are associated probabilities</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ProbProbrange" xml:space="preserve">
    <value>is the set of probabilities associated with values in X_range, values between 0 and 1 and excluding 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ProbLowerlimit" xml:space="preserve">
    <value>is the lower bound on the value for which you want a probability</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ProbUpperlimit" xml:space="preserve">
    <value>is the optional upper bound on the value. If omitted, PROB returns the probability that X_range values are equal to Lower_limit</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DevSqNumber1" xml:space="preserve">
    <value>are 1 to 255 arguments, or an array or array reference, on which you want DEVSQ to calculate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DevSqNumber2" xml:space="preserve">
    <value>are 1 to 255 arguments, or an array or array reference, on which you want DEVSQ to calculate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GeomeanNumber1" xml:space="preserve">
    <value>are 1 to 255 numbers or names, arrays, or references that contain numbers for which you want the mean</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GeomeanNumber2" xml:space="preserve">
    <value>are 1 to 255 numbers or names, arrays, or references that contain numbers for which you want the mean</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HarMeanNumber1" xml:space="preserve">
    <value>are 1 to 255 numbers or names, arrays, or references that contain numbers for which you want the harmonic mean</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HarMeanNumber2" xml:space="preserve">
    <value>are 1 to 255 numbers or names, arrays, or references that contain numbers for which you want the harmonic mean</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumSqNumber1" xml:space="preserve">
    <value>are 1 to 255 numbers, arrays, names, or references to arrays for which you want the sum of the squares</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumSqNumber2" xml:space="preserve">
    <value>are 1 to 255 numbers, arrays, names, or references to arrays for which you want the sum of the squares</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.KurtNumber1" xml:space="preserve">
    <value>are 1 to 255 numbers or names, arrays, or references that contain numbers for which you want the kurtosis</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.KurtNumber2" xml:space="preserve">
    <value>are 1 to 255 numbers or names, arrays, or references that contain numbers for which you want the kurtosis</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SkewNumber1" xml:space="preserve">
    <value>are 1 to 255 numbers or names, arrays, or references that contain numbers for which you want the skewness</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SkewNumber2" xml:space="preserve">
    <value>are 1 to 255 numbers or names, arrays, or references that contain numbers for which you want the skewness</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ZTestArray" xml:space="preserve">
    <value>is the array or range of data against which to test X</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ZTestX" xml:space="preserve">
    <value>is the value to test</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ZTestSigma" xml:space="preserve">
    <value>is the population (known) standard deviation. If omitted, the sample standard deviation is used</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LargeArray" xml:space="preserve">
    <value>is the array or range of data for which you want to determine the k-th largest value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LargeK" xml:space="preserve">
    <value>is the position (from the largest) in the array or cell range of the value to return</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SmallArray" xml:space="preserve">
    <value>is an array or range of numerical data for which you want to determine the k-th smallest value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SmallK" xml:space="preserve">
    <value>is the position (from the smallest) in the array or range of the value to return</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.QuartileArray" xml:space="preserve">
    <value>is the array or cell range of numeric values for which you want the quartile value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.QuartileQuart" xml:space="preserve">
    <value>is a number: minimum value = 0; 1st quartile = 1; median value = 2; 3rd quartile = 3; maximum value = 4</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PercentileArray" xml:space="preserve">
    <value>is the array or range of data that defines relative standing</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PercentileK" xml:space="preserve">
    <value>is the percentile value that is between 0 through 1, inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PercentRankArray" xml:space="preserve">
    <value>is the array or range of data with numeric values that defines relative standing</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PercentRankX" xml:space="preserve">
    <value>is the value for which you want to know the rank</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PercentRankSignificance" xml:space="preserve">
    <value>is an optional value that identifies the number of significant digits for the returned percentage, three digits if omitted (0.xxx%)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ModeNumber1" xml:space="preserve">
    <value>are 1 to 255 numbers, or names, arrays, or references that contain numbers for which you want the mode</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ModeNumber2" xml:space="preserve">
    <value>are 1 to 255 numbers, or names, arrays, or references that contain numbers for which you want the mode</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TrimmeanArray" xml:space="preserve">
    <value>is the range or array of values to trim and average</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TrimmeanPercent" xml:space="preserve">
    <value>is the fractional number of data points to exclude from the top and bottom of the data set</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TinvProbability" xml:space="preserve">
    <value>is the probability associated with the two-tailed Student's t-distribution, a number between 0 and 1 inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TinvDegfreedom" xml:space="preserve">
    <value>is a positive integer indicating the number of degrees of freedom to characterize the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ConcatenateText1" xml:space="preserve">
    <value>are 1 to 255 text strings to be joined into a single text string and can be text strings, numbers, or single-cell references</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ConcatenateText2" xml:space="preserve">
    <value>are 1 to 255 text strings to be joined into a single text string and can be text strings, numbers, or single-cell references</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PowerNumber" xml:space="preserve">
    <value>is the base number, any real number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PowerPower" xml:space="preserve">
    <value>is the exponent, to which the base number is raised</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RadiansAngle" xml:space="preserve">
    <value>is an angle in degrees that you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DegreesAngle" xml:space="preserve">
    <value>is the angle in radians that you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SubtotalFunctionnum" xml:space="preserve">
    <value>is the number 1 to 11 that specifies the summary function for the subtotal.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SubtotalRef1" xml:space="preserve">
    <value>are 1 to 254 ranges or references for which you want the subtotal</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumIfRange" xml:space="preserve">
    <value>is the range of cells you want evaluated</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumIfCriteria" xml:space="preserve">
    <value>is the condition or criteria in the form of a number, expression, or text that defines which cells will be added</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumIfSumrange" xml:space="preserve">
    <value>are the actual cells to sum. If omitted, the cells in range are used</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CountIfRange" xml:space="preserve">
    <value>is the range of cells from which you want to count nonblank cells</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CountIfCriteria" xml:space="preserve">
    <value>is the condition in the form of a number, expression, or text that defines which cells will be counted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CountBlankRange" xml:space="preserve">
    <value>is the range from which you want to count the empty cells</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsPmtRate" xml:space="preserve">
    <value>interest rate per period. For example, use 6%/4 for quarterly payments at 6% APR</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsPmtPer" xml:space="preserve">
    <value>period for which you want to find the interest</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsPmtNper" xml:space="preserve">
    <value>number of payment periods in an investment</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsPmtPv" xml:space="preserve">
    <value>lump sum amount that a series of future payments is right now</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RomanNumber" xml:space="preserve">
    <value>is the Arabic numeral you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RomanForm" xml:space="preserve">
    <value>is the number specifying the type of Roman numeral you want.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GetPivotDataDatafield" xml:space="preserve">
    <value>is the name of the data field to extract data from</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GetPivotDataPivottable" xml:space="preserve">
    <value>is a reference to a cell or range of cells in the PivotTable that contains the data you want to retrieve</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GetPivotDataField" xml:space="preserve">
    <value>field to refer to</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GetPivotDataItem" xml:space="preserve">
    <value>field item to refer to</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HyperlinkLinklocation" xml:space="preserve">
    <value>is the text giving the path and file name to the document to be opened, a hard drive location, UNC address, or URL path</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HyperlinkFriendlyname" xml:space="preserve">
    <value>is text or a number that is displayed in the cell. If omitted, the cell displays the Link_location text</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PhoneticReference" xml:space="preserve">
    <value>is a reference to a cell containing a phonetic string</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AverageAValue1" xml:space="preserve">
    <value>are 1 to 255 arguments for which you want the average</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AverageAValue2" xml:space="preserve">
    <value>are 1 to 255 arguments for which you want the average</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MaxAValue1" xml:space="preserve">
    <value>are 1 to 255 numbers, empty cells, logical values, or text numbers for which you want the maximum</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MaxAValue2" xml:space="preserve">
    <value>are 1 to 255 numbers, empty cells, logical values, or text numbers for which you want the maximum</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MinAValue1" xml:space="preserve">
    <value>are 1 to 255 numbers, empty cells, logical values, or text numbers for which you want the minimum</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MinAValue2" xml:space="preserve">
    <value>are 1 to 255 numbers, empty cells, logical values, or text numbers for which you want the minimum</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.StDevPAValue1" xml:space="preserve">
    <value>are 1 to 255 values corresponding to a population and can be values, names, arrays, or references that contain values</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.StDevPAValue2" xml:space="preserve">
    <value>are 1 to 255 values corresponding to a population and can be values, names, arrays, or references that contain values</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VarPAValue1" xml:space="preserve">
    <value>are 1 to 255 value arguments corresponding to a population</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VarPAValue2" xml:space="preserve">
    <value>are 1 to 255 value arguments corresponding to a population</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.StDevAValue1" xml:space="preserve">
    <value>are 1 to 255 values corresponding to a sample of a population and can be values or names or references to values</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.StDevAValue2" xml:space="preserve">
    <value>are 1 to 255 values corresponding to a sample of a population and can be values or names or references to values</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VarAValue1" xml:space="preserve">
    <value>are 1 to 255 value arguments corresponding to a sample of a population</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VarAValue2" xml:space="preserve">
    <value>are 1 to 255 value arguments corresponding to a sample of a population</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BahtTextNumber" xml:space="preserve">
    <value>is a number that you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RtdProgID" xml:space="preserve">
    <value>is the name of the ProgID of a registered COM automation add-in. Enclose the name in quotation marks</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RtdServer" xml:space="preserve">
    <value>is the name of the server where the add-in should be run. Enclose the name in quotation marks. If the add-in is run locally, use an empty string</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RtdTopic1" xml:space="preserve">
    <value>are 1 to 38 parameters that specify a piece of data</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RtdTopic2" xml:space="preserve">
    <value>are 1 to 38 parameters that specify a piece of data</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeValueConnection" xml:space="preserve">
    <value>is the name of a connection to an OLAP cube</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeValueMemberexpression1" xml:space="preserve">
    <value>is a slicer that determines the portion of the OLAP cube for which the aggregated value is to be retrieved</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeMemberConnection" xml:space="preserve">
    <value>is the name of a connection to an OLAP cube</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeMemberMemberexpression" xml:space="preserve">
    <value>is the expression representing the name of a member or tuple in the OLAP cube</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeMemberCaption" xml:space="preserve">
    <value>is the caption to be displayed in the cell</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeMemberPropertyConnection" xml:space="preserve">
    <value>is the name of a connection to an OLAP cube</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeMemberPropertyMemberexpression" xml:space="preserve">
    <value>is the expression representing the name of a member in the OLAP cube</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeMemberPropertyProperty" xml:space="preserve">
    <value>is the property name</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeRankedMemberConnection" xml:space="preserve">
    <value>is the name of a connection to an OLAP cube</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeRankedMemberSetexpression" xml:space="preserve">
    <value>is the set from which the element is to be retrieved</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeRankedMemberRank" xml:space="preserve">
    <value>is the rank of the element to be retrieved</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeRankedMemberCaption" xml:space="preserve">
    <value>is the caption to be displayed in the cell</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Hex2BinNumber" xml:space="preserve">
    <value>is the hexadecimal number you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Hex2BinPlaces" xml:space="preserve">
    <value>is the number of characters to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Hex2DecNumber" xml:space="preserve">
    <value>is the hexadecimal number you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Hex2OctNumber" xml:space="preserve">
    <value>is the hexadecimal number you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Hex2OctPlaces" xml:space="preserve">
    <value>is the number of characters to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Dec2BinNumber" xml:space="preserve">
    <value>is the decimal integer you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Dec2BinPlaces" xml:space="preserve">
    <value>is the number of characters to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Dec2HexNumber" xml:space="preserve">
    <value>is the decimal integer you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Dec2HexPlaces" xml:space="preserve">
    <value>is the number of characters to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Dec2OctNumber" xml:space="preserve">
    <value>is the decimal integer you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Dec2OctPlaces" xml:space="preserve">
    <value>is the number of characters to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Oct2BinNumber" xml:space="preserve">
    <value>is the octal number you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Oct2BinPlaces" xml:space="preserve">
    <value>is the number of characters to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Oct2HexNumber" xml:space="preserve">
    <value>is the octal number you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Oct2HexPlaces" xml:space="preserve">
    <value>is the number of characters to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Oct2DecNumber" xml:space="preserve">
    <value>is the octal number you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Bin2DecNumber" xml:space="preserve">
    <value>is the binary number you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Bin2OctNumber" xml:space="preserve">
    <value>is the binary number you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Bin2OctPlaces" xml:space="preserve">
    <value>is the number of characters to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Bin2HexNumber" xml:space="preserve">
    <value>is the binary number you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.Bin2HexPlaces" xml:space="preserve">
    <value>is the number of characters to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImSubInumber1" xml:space="preserve">
    <value>is the complex number from which to subtract inumber2</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImSubInumber2" xml:space="preserve">
    <value>is the complex number to subtract from inumber1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImDivInumber1" xml:space="preserve">
    <value>is the complex numerator or dividend</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImDivInumber2" xml:space="preserve">
    <value>is the complex denominator or divisor</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImPowerInumber" xml:space="preserve">
    <value>is a complex number you want to raise to a power</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImPowerNumber" xml:space="preserve">
    <value>is the power to which you want to raise the complex number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImAbsInumber" xml:space="preserve">
    <value>is a complex number for which you want the absolute value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImSqrtInumber" xml:space="preserve">
    <value>is a complex number for which you want the square root</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImLnInumber" xml:space="preserve">
    <value>is a complex number for which you want the natural logarithm</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImLog2Inumber" xml:space="preserve">
    <value>is a complex number for which you want the base-2 logarithm</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImLog10Inumber" xml:space="preserve">
    <value>is a complex number for which you want the common logarithm</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImSinInumber" xml:space="preserve">
    <value>is a complex number for which you want the sine</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImCosInumber" xml:space="preserve">
    <value>is a complex number for which you want the cosine</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImExpInumber" xml:space="preserve">
    <value>is a complex number for which you want the exponential</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImArgumentInumber" xml:space="preserve">
    <value>is a complex number for which you want the argument</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImConjugateInumber" xml:space="preserve">
    <value>is a complex number for which you want the conjugate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImaginaryInumber" xml:space="preserve">
    <value>is a complex number for which you want the imaginary coefficient</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImRealInumber" xml:space="preserve">
    <value>is a complex number for which you want the real coefficient</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ComplexRealnum" xml:space="preserve">
    <value>is the real coefficient of the complex number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ComplexInum" xml:space="preserve">
    <value>is the imaginary coefficient of the complex number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ComplexSuffix" xml:space="preserve">
    <value>is the suffix for the imaginary component of the complex number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImSumInumber1" xml:space="preserve">
    <value>are from 1 to 255 complex numbers to add</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImSumInumber2" xml:space="preserve">
    <value>are from 1 to 255 complex numbers to add</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImProductInumber1" xml:space="preserve">
    <value>Inumber1, Inumber2,... are from 1 to 255 complex numbers to multiply.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImProductInumber2" xml:space="preserve">
    <value>Inumber1, Inumber2,... are from 1 to 255 complex numbers to multiply.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SeriessumX" xml:space="preserve">
    <value>is the input value to the power series</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SeriessumN" xml:space="preserve">
    <value>is the initial power to which you want to raise x</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SeriessumM" xml:space="preserve">
    <value>is the step by which to increase n for each term in the series</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SeriessumCoefficients" xml:space="preserve">
    <value>is a set of coefficients by which each successive power of x is multiplied</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FactDoubleNumber" xml:space="preserve">
    <value>is the value for which to return the double factorial</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SqrtPiNumber" xml:space="preserve">
    <value>is the number by which p is multiplied</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.QuotientNumerator" xml:space="preserve">
    <value>is the dividend</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.QuotientDenominator" xml:space="preserve">
    <value>is the divisor</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DeltaNumber1" xml:space="preserve">
    <value>is the first number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DeltaNumber2" xml:space="preserve">
    <value>is the second number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GestepNumber" xml:space="preserve">
    <value>is the value to test against step</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GestepStep" xml:space="preserve">
    <value>is the threshold value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsEvenNumber" xml:space="preserve">
    <value>is the value to test</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsOddNumber" xml:space="preserve">
    <value>is the value to test</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MRoundNumber" xml:space="preserve">
    <value>is the value to round</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MRoundMultiple" xml:space="preserve">
    <value>is the multiple to which you want to round number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ErfLowerlimit" xml:space="preserve">
    <value>is the lower bound for integrating ERF</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ErfUpperlimit" xml:space="preserve">
    <value>is the upper bound for integrating ERF</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ErfcX" xml:space="preserve">
    <value>is the lower bound for integrating ERF</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BesselJX" xml:space="preserve">
    <value>is the value at which to evaluate the function</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BesselJN" xml:space="preserve">
    <value>is the order of the Bessel function</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BesselKX" xml:space="preserve">
    <value>is the value at which to evaluate the function</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BesselKN" xml:space="preserve">
    <value>is the order of the function</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BesselYX" xml:space="preserve">
    <value>is the value at which to evaluate the function</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BesselYN" xml:space="preserve">
    <value>is the order of the function</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BesselIX" xml:space="preserve">
    <value>is the value at which to evaluate the function</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BesselIN" xml:space="preserve">
    <value>is the order of the Bessel function</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.XirrValues" xml:space="preserve">
    <value>is a series of cash flows that correspond to a schedule of payments in dates</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.XirrDates" xml:space="preserve">
    <value>is a schedule of payment dates that corresponds to the cash flow payments</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.XirrGuess" xml:space="preserve">
    <value>is a number that you guess is close to the result of XIRR</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.XnpvRate" xml:space="preserve">
    <value>is the discount rate to apply to the cash flows</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.XnpvValues" xml:space="preserve">
    <value>is a series of cash flows that correspond to a schedule of payments in dates</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.XnpvDates" xml:space="preserve">
    <value>is a schedule of payment dates that corresponds to the cash flow payments</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceMatSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceMatMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceMatIssue" xml:space="preserve">
    <value>is the security's issue date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceMatRate" xml:space="preserve">
    <value>is the security's interest rate at date of issue</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceMatYld" xml:space="preserve">
    <value>is the security's annual yield</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceMatBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldMatSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldMatMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldMatIssue" xml:space="preserve">
    <value>is the security's issue date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldMatRate" xml:space="preserve">
    <value>is the security's interest rate at date of issue</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldMatPr" xml:space="preserve">
    <value>is the security's price per $100 face value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldMatBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IntrateSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IntrateMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IntrateInvestment" xml:space="preserve">
    <value>is the amount invested in the security</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IntrateRedemption" xml:space="preserve">
    <value>is the amount to be received at maturity</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IntrateBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ReceivedSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ReceivedMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ReceivedInvestment" xml:space="preserve">
    <value>is the amount invested in the security</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ReceivedDiscount" xml:space="preserve">
    <value>is the security's discount rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ReceivedBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DiscSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DiscMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DiscPr" xml:space="preserve">
    <value>is the security's price per $100 face value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DiscRedemption" xml:space="preserve">
    <value>is the security's redemption value per $100 face value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DiscBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceDiscSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceDiscMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceDiscDiscount" xml:space="preserve">
    <value>is the security's discount rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceDiscRedemption" xml:space="preserve">
    <value>is the security's redemption value per $100 face value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceDiscBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldDiscSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldDiscMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldDiscPr" xml:space="preserve">
    <value>is the security's price per $100 face value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldDiscRedemption" xml:space="preserve">
    <value>is the security's redemption value per $100 face value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldDiscBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TbillEqSettlement" xml:space="preserve">
    <value>is the Treasury bill's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TbillEqMaturity" xml:space="preserve">
    <value>is the Treasury bill's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TbillEqDiscount" xml:space="preserve">
    <value>is the Treasury bill's discount rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TbillPriceSettlement" xml:space="preserve">
    <value>is the Treasury bill's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TbillPriceMaturity" xml:space="preserve">
    <value>is the Treasury bill's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TbillPriceDiscount" xml:space="preserve">
    <value>is the Treasury bill's discount rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TbillYieldSettlement" xml:space="preserve">
    <value>is the Treasury bill's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TbillYieldMaturity" xml:space="preserve">
    <value>is the Treasury bill's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TbillYieldPr" xml:space="preserve">
    <value>is the Treasury Bill's price per $100 face value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceRate" xml:space="preserve">
    <value>is the security's annual coupon rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceYld" xml:space="preserve">
    <value>is the security's annual yield</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceRedemption" xml:space="preserve">
    <value>is the security's redemption value per $100 face value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceFrequency" xml:space="preserve">
    <value>is the number of coupon payments per year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PriceBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldRate" xml:space="preserve">
    <value>is the security's annual coupon rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldPr" xml:space="preserve">
    <value>is the security's price per $100 face value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldRedemption" xml:space="preserve">
    <value>is the security's redemption value per $100 face value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldFrequency" xml:space="preserve">
    <value>is the number of coupon payments per year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YieldBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DollarDeFractionaldollar" xml:space="preserve">
    <value>is a number expressed as a fraction</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DollarDeFraction" xml:space="preserve">
    <value>is the integer to use in the denominator of the fraction</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DollarFrDecimaldollar" xml:space="preserve">
    <value>is a decimal number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DollarFrFraction" xml:space="preserve">
    <value>is the integer to use in the denominator of a fraction</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NominalEffectrate" xml:space="preserve">
    <value>is the effective interest rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NominalNpery" xml:space="preserve">
    <value>is the number of compounding periods per year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.EffectNominalrate" xml:space="preserve">
    <value>is the nominal interest rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.EffectNpery" xml:space="preserve">
    <value>is the number of compounding periods per year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CumPrincRate" xml:space="preserve">
    <value>is the interest rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CumPrincNper" xml:space="preserve">
    <value>is the total number of payment periods</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CumPrincPv" xml:space="preserve">
    <value>is the present value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CumPrincStartperiod" xml:space="preserve">
    <value>is the first period in the calculation</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CumPrincEndperiod" xml:space="preserve">
    <value>is the last period in the calculation</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CumPrincType" xml:space="preserve">
    <value>is the timing of the payment</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CumIpmtRate" xml:space="preserve">
    <value>is the interest rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CumIpmtNper" xml:space="preserve">
    <value>is the total number of payment periods</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CumIpmtPv" xml:space="preserve">
    <value>is the present value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CumIpmtStartperiod" xml:space="preserve">
    <value>is the first period in the calculation</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CumIpmtEndperiod" xml:space="preserve">
    <value>is the last period in the calculation</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CumIpmtType" xml:space="preserve">
    <value>is the timing of the payment</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.EDateStartdate" xml:space="preserve">
    <value>is a serial date number that represents the start date</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.EDateMonths" xml:space="preserve">
    <value>is the number of months before or after start_date</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.EOMonthStartdate" xml:space="preserve">
    <value>is a serial date number that represents the start date</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.EOMonthMonths" xml:space="preserve">
    <value>is the number of months before or after the start_date</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YearFracStartdate" xml:space="preserve">
    <value>is a serial date number that represents the start date</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YearFracEnddate" xml:space="preserve">
    <value>is a serial date number that represents the end date</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.YearFracBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupDaybsSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupDaybsMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupDaybsFrequency" xml:space="preserve">
    <value>is the number of coupon payments per year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupDaybsBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupDaysSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupDaysMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupDaysFrequency" xml:space="preserve">
    <value>is the number of coupon payments per year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupDaysBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupDaysncSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupDaysncMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupDaysncFrequency" xml:space="preserve">
    <value>is the number of coupon payments per year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupDaysncBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupncdSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupncdMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupncdFrequency" xml:space="preserve">
    <value>is the number of coupon payments per year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupncdBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupNumSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupNumMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupNumFrequency" xml:space="preserve">
    <value>is the number of coupon payments per year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CoupNumBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CouppcdSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CouppcdMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CouppcdFrequency" xml:space="preserve">
    <value>is the number of coupon payments per year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CouppcdBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DurationSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DurationMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DurationCoupon" xml:space="preserve">
    <value>is the security's annual coupon rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DurationYld" xml:space="preserve">
    <value>is the security's annual yield</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DurationFrequency" xml:space="preserve">
    <value>is the number of coupon payments per year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DurationBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MDurationSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MDurationMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MDurationCoupon" xml:space="preserve">
    <value>is the security's annual coupon rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MDurationYld" xml:space="preserve">
    <value>is the security's annual yield</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MDurationFrequency" xml:space="preserve">
    <value>is the number of coupon payments per year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MDurationBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddLPriceSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddLPriceMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddLPriceLastinterest" xml:space="preserve">
    <value>is the security's last coupon date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddLPriceRate" xml:space="preserve">
    <value>is the security's interest rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddLPriceYld" xml:space="preserve">
    <value>is the security's annual yield</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddLPriceRedemption" xml:space="preserve">
    <value>is the security's redemption value per $100 face value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddLPriceFrequency" xml:space="preserve">
    <value>is the number of coupon payments per year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddLPriceBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddLYieldSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddLYieldMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddLYieldLastinterest" xml:space="preserve">
    <value>is the security's last coupon date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddLYieldRate" xml:space="preserve">
    <value>is the security's interest rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddLYieldPr" xml:space="preserve">
    <value>is the security's price</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddLYieldRedemption" xml:space="preserve">
    <value>is the security's redemption value per $100 face value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddLYieldFrequency" xml:space="preserve">
    <value>is the number of coupon payments per year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddLYieldBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFPriceSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFPriceMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFPriceIssue" xml:space="preserve">
    <value>is the security's issue date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFPriceFirstcoupon" xml:space="preserve">
    <value>is the security's first coupon date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFPriceRate" xml:space="preserve">
    <value>is the security's interest rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFPriceYld" xml:space="preserve">
    <value>is the security's annual yield</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFPriceRedemption" xml:space="preserve">
    <value>is the security's redemption value per $100 face value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFPriceFrequency" xml:space="preserve">
    <value>is the number of coupon payments per year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFPriceBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFYieldSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFYieldMaturity" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFYieldIssue" xml:space="preserve">
    <value>is the security's issue date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFYieldFirstcoupon" xml:space="preserve">
    <value>is the security's first coupon date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFYieldRate" xml:space="preserve">
    <value>is the security's interest rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFYieldPr" xml:space="preserve">
    <value>is the security's price</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFYieldRedemption" xml:space="preserve">
    <value>is the security's redemption value per $100 face value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFYieldFrequency" xml:space="preserve">
    <value>is the number of coupon payments per year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.OddFYieldBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RandBetweenBottom" xml:space="preserve">
    <value>is the smallest integer RANDBETWEEN will return</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RandBetweenTop" xml:space="preserve">
    <value>is the largest integer RANDBETWEEN will return</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WeekNumSerialnumber" xml:space="preserve">
    <value>is the date-time code used by Spreadsheet for date and time calculation</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WeekNumReturntype" xml:space="preserve">
    <value>is a number (1 or 2) that determines the type of the return value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AmordegrcCost" xml:space="preserve">
    <value>is the cost of the asset</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AmordegrcDatepurchased" xml:space="preserve">
    <value>is the date the asset is purchased</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AmordegrcFirstperiod" xml:space="preserve">
    <value>is the date of the end of the first period</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AmordegrcSalvage" xml:space="preserve">
    <value>is the salvage value at the end of life of the asset.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AmordegrcPeriod" xml:space="preserve">
    <value>is the period</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AmordegrcRate" xml:space="preserve">
    <value>is the rate of depreciation</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AmordegrcBasis" xml:space="preserve">
    <value>year_basis : 0 for year of 360 days, 1 for actual, 3 for year of 365 days.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AmorlincCost" xml:space="preserve">
    <value>is the cost of the asset</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AmorlincDatepurchased" xml:space="preserve">
    <value>is the date the asset is purchased</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AmorlincFirstperiod" xml:space="preserve">
    <value>is the date of the end of the first period</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AmorlincSalvage" xml:space="preserve">
    <value>is the salvage value at the end of life of the asset.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AmorlincPeriod" xml:space="preserve">
    <value>is the period</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AmorlincRate" xml:space="preserve">
    <value>is the rate of depreciation</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AmorlincBasis" xml:space="preserve">
    <value>year_basis : 0 for year of 360 days, 1 for actual, 3 for year of 365 days.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ConvertNumber" xml:space="preserve">
    <value>is the value in from_units to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ConvertFromunit" xml:space="preserve">
    <value>is the units for number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ConvertTounit" xml:space="preserve">
    <value>is the units for the result</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AccrintIssue" xml:space="preserve">
    <value>is the security's issue date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AccrintFirstinterest" xml:space="preserve">
    <value>is the security's first interest date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AccrintSettlement" xml:space="preserve">
    <value>is the security's settlement date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AccrintRate" xml:space="preserve">
    <value>is the security's annual coupon rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AccrintPar" xml:space="preserve">
    <value>is the security's par value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AccrintFrequency" xml:space="preserve">
    <value>is the number of coupon payments per year</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AccrintBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AccrintCalcmethod" xml:space="preserve">
    <value>is a logical value: to accrued interest from issue date = TRUE or omitted; to calculate from last coupon payment date = FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AccrintmIssue" xml:space="preserve">
    <value>is the security's issue date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AccrintmSettlement" xml:space="preserve">
    <value>is the security's maturity date, expressed as a serial date number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AccrintmRate" xml:space="preserve">
    <value>is the security's annual coupon rate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AccrintmPar" xml:space="preserve">
    <value>is the security's par value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AccrintmBasis" xml:space="preserve">
    <value>is the type of day count basis to use</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WorkDayStartdate" xml:space="preserve">
    <value>is a serial date number that represents the start date</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WorkDayDays" xml:space="preserve">
    <value>is the number of nonweekend and non-holiday days before or after start_date</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WorkDayHolidays" xml:space="preserve">
    <value>is an optional array of one or more serial date numbers to exclude from the working calendar, such as state and federal holidays and floating holidays</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NetworkDaysStartdate" xml:space="preserve">
    <value>is a serial date number that represents the start date</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NetworkDaysEnddate" xml:space="preserve">
    <value>is a serial date number that represents the end date</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NetworkDaysHolidays" xml:space="preserve">
    <value>is an optional set of one or more serial date numbers to exclude from the working calendar, such as state and federal holidays and floating holidays</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GcdNumber1" xml:space="preserve">
    <value>are 1 to 255 values</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GcdNumber2" xml:space="preserve">
    <value>are 1 to 255 values</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MultinomialNumber1" xml:space="preserve">
    <value>are 1 to 255 values for which you want the multinomial</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MultinomialNumber2" xml:space="preserve">
    <value>are 1 to 255 values for which you want the multinomial</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LcmNumber1" xml:space="preserve">
    <value>are 1 to 255 values for which you want the least common multiple</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LcmNumber2" xml:space="preserve">
    <value>are 1 to 255 values for which you want the least common multiple</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FvSchedulePrincipal" xml:space="preserve">
    <value>is the present value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FvScheduleSchedule" xml:space="preserve">
    <value>is an array of interest rates to apply</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeKpiMemberConnection" xml:space="preserve">
    <value>is the name of a connection to an OLAP cube</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeKpiMemberKpiname" xml:space="preserve">
    <value>is the KPI name</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeKpiMemberKpiproperty" xml:space="preserve">
    <value>is the KPI property</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeKpiMemberCaption" xml:space="preserve">
    <value>is the caption to be displayed in the cell</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeSetConnection" xml:space="preserve">
    <value>is the name of a connection to an OLAP cube</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeSetSetexpression" xml:space="preserve">
    <value>is the expression for the set</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeSetCaption" xml:space="preserve">
    <value>is the caption to be displayed in the cell</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeSetSortorder" xml:space="preserve">
    <value>is the sort order</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeSetSortby" xml:space="preserve">
    <value>is the sort by</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CubeSetCountSet" xml:space="preserve">
    <value>is the set whose elements are to be counted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IfErrorValue" xml:space="preserve">
    <value>is any value or expression or reference</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IfErrorValueiferror" xml:space="preserve">
    <value>is any value or expression or reference</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CountIfsCriteriarange" xml:space="preserve">
    <value>is the range of cells you want evaluated for the particular condition</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CountIfsCriteria" xml:space="preserve">
    <value>is the condition in the form of a number, expression, or text that defines which cells will be counted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumIfsSumrange" xml:space="preserve">
    <value>are the actual cells to sum.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumIfsCriteriarange" xml:space="preserve">
    <value>is the range of cells you want evaluated for the particular condition</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SumIfsCriteria" xml:space="preserve">
    <value>is the condition or criteria in the form of a number, expression, or text that defines which cells will be added</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AverageIfRange" xml:space="preserve">
    <value>is the range of cells you want evaluated</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AverageIfCriteria" xml:space="preserve">
    <value>is the condition or criteria in the form of a number, expression, or text that defines which cells will be used to find the average</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AverageIfAveragerange" xml:space="preserve">
    <value>are the actual cells to be used to find the average. If omitted, the cells in range are used </value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AverageIfsAveragerange" xml:space="preserve">
    <value>are the actual cells to be used to find the average.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AverageIfsCriteriarange" xml:space="preserve">
    <value>is the range of cells you want evaluated for the particular condition</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AverageIfsCriteria" xml:space="preserve">
    <value>is the condition or criteria in the form of a number, expression, or text that defines which cells will be used to find the average</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AggregateFunctionnum" xml:space="preserve">
    <value>is the number 1 to 19 that specifies the summary function for the aggregate.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AggregateOptions" xml:space="preserve">
    <value>is the number 0 to 7 that specifies the values to ignore for the aggregate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AggregateArray" xml:space="preserve">
    <value>is the array or range of numerical data on which to calculate the aggregate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.AggregateK" xml:space="preserve">
    <value>indicates the position in the array; it is k-th largest, k-th smallest, k-th percentile, or k-th quartile.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BinomDotDistNumbers" xml:space="preserve">
    <value>is the number of successes in trials</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BinomDotDistTrials" xml:space="preserve">
    <value>is the number of independent trials</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BinomDotDistProbabilitys" xml:space="preserve">
    <value>is the probability of success on each trial</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BinomDotDistCumulative" xml:space="preserve">
    <value>is a logical value: for the cumulative distribution function, use TRUE; for the probability mass function, use FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BinomDotInvTrials" xml:space="preserve">
    <value>is the number of Bernoulli trials</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BinomDotInvProbabilitys" xml:space="preserve">
    <value>is the probability of success on each trial, a number between 0 and 1 inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BinomDotInvAlpha" xml:space="preserve">
    <value>is the criterion value, a number between 0 and 1 inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ConfidenceNormAlpha" xml:space="preserve">
    <value>is the significance level used to compute the confidence level, a number greater than 0 and less than 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ConfidenceNormStandarddev" xml:space="preserve">
    <value>is the population standard deviation for the data range and is assumed to be known. Standard_dev must be greater than 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ConfidenceNormSize" xml:space="preserve">
    <value>is the sample size</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ConfidenceDotTAlpha" xml:space="preserve">
    <value>is the significance level used to compute the confidence level, a number greater than 0 and less than 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ConfidenceDotTStandarddev" xml:space="preserve">
    <value>is the population standard deviation for the data range and is assumed to be known. Standard_dev must be greater than 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ConfidenceDotTSize" xml:space="preserve">
    <value>is the sample size</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChisqDotTestActualrange" xml:space="preserve">
    <value>is the range of data that contains observations to test against expected values</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChisqDotTestExpectedrange" xml:space="preserve">
    <value>is the range of data that contains the ratio of the product of row totals and column totals to the grand total</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDotTestArray1" xml:space="preserve">
    <value>is the first array or range of data and can be numbers or names, arrays, or references that contain numbers (blanks are ignored)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDotTestArray2" xml:space="preserve">
    <value>is the second array or range of data and can be numbers or names, arrays, or references that contain numbers (blanks are ignored)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CovariancePArray1" xml:space="preserve">
    <value>is the first cell range of integers and must be numbers, arrays, or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CovariancePArray2" xml:space="preserve">
    <value>is the second cell range of integers and must be numbers, arrays, or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CovarianceSArray1" xml:space="preserve">
    <value>is the first cell range of integers and must be numbers, arrays, or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CovarianceSArray2" xml:space="preserve">
    <value>is the second cell range of integers and must be numbers, arrays, or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ExponDotDistX" xml:space="preserve">
    <value>is the value of the function, a nonnegative number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ExponDotDistLambda" xml:space="preserve">
    <value>is the parameter value, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ExponDotDistCumulative" xml:space="preserve">
    <value>is a logical value for the function to return: the cumulative distribution function = TRUE; the probability density function = FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GammaDotDistX" xml:space="preserve">
    <value>is the value at which you want to evaluate the distribution, a nonnegative number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GammaDotDistAlpha" xml:space="preserve">
    <value>is a parameter to the distribution, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GammaDotDistBeta" xml:space="preserve">
    <value>is a parameter to the distribution, a positive number. If beta = 1, GAMMA.DIST returns the standard gamma distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GammaDotDistCumulative" xml:space="preserve">
    <value>is a logical value: return the cumulative distribution function = TRUE; return the probability mass function = FALSE or omitted</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GammaDotInvProbability" xml:space="preserve">
    <value>is the probability associated with the gamma distribution, a number between 0 and 1, inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GammaDotInvAlpha" xml:space="preserve">
    <value>is a parameter to the distribution, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GammaDotInvBeta" xml:space="preserve">
    <value>is a parameter to the distribution, a positive number. If beta = 1, GAMMA.INV returns the inverse of the standard gamma distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ModeMultNumber1" xml:space="preserve">
    <value>are 1 to 255 numbers, or names, arrays, or references that contain numbers for which you want the mode</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ModeMultNumber2" xml:space="preserve">
    <value>are 1 to 255 numbers, or names, arrays, or references that contain numbers for which you want the mode</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ModeSnglNumber1" xml:space="preserve">
    <value>are 1 to 255 numbers, or names, arrays, or references that contain numbers for which you want the mode</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ModeSnglNumber2" xml:space="preserve">
    <value>are 1 to 255 numbers, or names, arrays, or references that contain numbers for which you want the mode</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormDistX" xml:space="preserve">
    <value>is the value for which you want the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormDistMean" xml:space="preserve">
    <value>is the arithmetic mean of the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormDistStandarddev" xml:space="preserve">
    <value>is the standard deviation of the distribution, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormDistCumulative" xml:space="preserve">
    <value>is a logical value: for the cumulative distribution function, use TRUE; for the probability density function, use FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormInvProbability" xml:space="preserve">
    <value>is a probability corresponding to the normal distribution, a number between 0 and 1 inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormInvMean" xml:space="preserve">
    <value>is the arithmetic mean of the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormInvStandarddev" xml:space="preserve">
    <value>is the standard deviation of the distribution, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PercentileExcArray" xml:space="preserve">
    <value>is the array or range of data that defines relative standing</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PercentileExcK" xml:space="preserve">
    <value>is the percentile value that is between 0 through 1, inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PercentileIncArray" xml:space="preserve">
    <value>is the array or range of data that defines relative standing</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PercentileIncK" xml:space="preserve">
    <value>is the percentile value that is between 0 through 1, inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PercentRankExcArray" xml:space="preserve">
    <value>is the array or range of data with numeric values that defines relative standing</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PercentRankExcX" xml:space="preserve">
    <value>is the value for which you want to know the rank</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PercentRankExcSignificance" xml:space="preserve">
    <value>is an optional value that identifies the number of significant digits for the returned percentage, three digits if omitted (0.xxx%)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PercentRankIncArray" xml:space="preserve">
    <value>is the array or range of data with numeric values that defines relative standing</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PercentRankIncX" xml:space="preserve">
    <value>is the value for which you want to know the rank</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PercentRankIncSignificance" xml:space="preserve">
    <value>is an optional value that identifies the number of significant digits for the returned percentage, three digits if omitted (0.xxx%)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PoissonDotDistX" xml:space="preserve">
    <value>is the number of events</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PoissonDotDistMean" xml:space="preserve">
    <value>is the expected numeric value, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PoissonDotDistCumulative" xml:space="preserve">
    <value>is a logical value: for the cumulative Poisson probability, use TRUE; for the Poisson probability mass function, use FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.QuartileExcArray" xml:space="preserve">
    <value>is the array or cell range of numeric values for which you want the quartile value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.QuartileExcQuart" xml:space="preserve">
    <value>is a number: minimum value = 0; 1st quartile = 1; median value = 2; 3rd quartile = 3; maximum value = 4</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.QuartileIncArray" xml:space="preserve">
    <value>is the array or cell range of numeric values for which you want the quartile value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.QuartileIncQuart" xml:space="preserve">
    <value>is a number: minimum value = 0; 1st quartile = 1; median value = 2; 3rd quartile = 3; maximum value = 4</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RankDotAvgNumber" xml:space="preserve">
    <value>is the number for which you want to find the rank</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RankDotAvgRef" xml:space="preserve">
    <value>is an array of, or a reference to, a list of numbers. Nonnumeric values are ignored</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RankDotAvgOrder" xml:space="preserve">
    <value>is a number: rank in the list sorted descending = 0 or omitted; rank in the list sorted ascending = any nonzero value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RankDotEqNumber" xml:space="preserve">
    <value>is the number for which you want to find the rank</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RankDotEqRef" xml:space="preserve">
    <value>is an array of, or a reference to, a list of numbers. Nonnumeric values are ignored</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RankDotEqOrder" xml:space="preserve">
    <value>is a number: rank in the list sorted descending = 0 or omitted; rank in the list sorted ascending = any nonzero value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.StDevDotSNumber1" xml:space="preserve">
    <value>are 1 to 255 numbers corresponding to a sample of a population and can be numbers or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.StDevDotSNumber2" xml:space="preserve">
    <value>are 1 to 255 numbers corresponding to a sample of a population and can be numbers or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.StDevDotPNumber1" xml:space="preserve">
    <value>are 1 to 255 numbers corresponding to a population and can be numbers or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.StDevDotPNumber2" xml:space="preserve">
    <value>are 1 to 255 numbers corresponding to a population and can be numbers or references that contain numbers</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDotDistX" xml:space="preserve">
    <value>is the numeric value at which to evaluate the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDotDistDegfreedom" xml:space="preserve">
    <value>is an integer indicating the number of degrees of freedom that characterize the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDotDistCumulative" xml:space="preserve">
    <value>is a logical value: for the cumulative distribution function, use TRUE; for the probability density function, use FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDotDistDot2tX" xml:space="preserve">
    <value>is the numeric value at which to evaluate the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDotDistDot2tDegfreedom" xml:space="preserve">
    <value>is an integer indicating the number of degrees of freedom that characterize the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDotDistDotTtX" xml:space="preserve">
    <value>is the numeric value at which to evaluate the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDotDistDotTtDegfreedom" xml:space="preserve">
    <value>is an integer indicating the number of degrees of freedom that characterize the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDotInvProbability" xml:space="preserve">
    <value>is the probability associated with the two-tailed Student's t-distribution, a number between 0 and 1 inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDotInvDegfreedom" xml:space="preserve">
    <value>is a positive integer indicating the number of degrees of freedom to characterize the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDotInvDot2tProbability" xml:space="preserve">
    <value>is the probability associated with the two-tailed Student's t-distribution, a number between 0 and 1 inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDotInvDot2tDegfreedom" xml:space="preserve">
    <value>is a positive integer indicating the number of degrees of freedom to characterize the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VarDotSNumber1" xml:space="preserve">
    <value>are 1 to 255 numeric arguments corresponding to a sample of a population</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VarDotSNumber2" xml:space="preserve">
    <value>are 1 to 255 numeric arguments corresponding to a sample of a population</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VarDotPNumber1" xml:space="preserve">
    <value>are 1 to 255 numeric arguments corresponding to a population</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.VarDotPNumber2" xml:space="preserve">
    <value>are 1 to 255 numeric arguments corresponding to a population</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WeibullDotDistX" xml:space="preserve">
    <value>is the value at which to evaluate the function, a nonnegative number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WeibullDotDistAlpha" xml:space="preserve">
    <value>is a parameter to the distribution, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WeibullDotDistBeta" xml:space="preserve">
    <value>is a parameter to the distribution, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WeibullDotDistCumulative" xml:space="preserve">
    <value>is a logical value: for the cumulative distribution function, use TRUE; for the probability mass function, use FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NetworkDaysIntlStartdate" xml:space="preserve">
    <value>is a serial date number that represents the start date</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NetworkDaysIntlEnddate" xml:space="preserve">
    <value>is a serial date number that represents the end date</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NetworkDaysIntlWeekend" xml:space="preserve">
    <value>is a number or string specifying when weekends occur</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NetworkDaysIntlHolidays" xml:space="preserve">
    <value>is an optional set of one or more serial date numbers to exclude from the working calendar, such as state and federal holidays and floating holidays</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WorkDayIntlStartdate" xml:space="preserve">
    <value>is a serial date number that represents the start date</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WorkDayIntlDays" xml:space="preserve">
    <value>is the number of nonweekend and non-holiday days before or after start_date</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WorkDayIntlWeekend" xml:space="preserve">
    <value>is a number or string specifying when weekends occur</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.WorkDayIntlHolidays" xml:space="preserve">
    <value>is an optional array of one or more serial date numbers to exclude from the working calendar, such as state and federal holidays and floating holidays</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsoCeilingNumber" xml:space="preserve">
    <value>is the value you want to round</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsoCeilingSignificance" xml:space="preserve">
    <value>is the optional multiple to which you want to round</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaDistX" xml:space="preserve">
    <value>is the value between A and B at which to evaluate the function</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaDistAlpha" xml:space="preserve">
    <value>is a parameter to the distribution and must be greater than 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaDistBeta" xml:space="preserve">
    <value>is a parameter to the distribution and must be greater than 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaDistCumulative" xml:space="preserve">
    <value>is a logical value: for the cumulative distribution function, use TRUE; for the probability density function, use FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaDistA" xml:space="preserve">
    <value>is an optional lower bound to the interval of x. If omitted, A = 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaDistB" xml:space="preserve">
    <value>is an optional upper bound to the interval of x. If omitted, B = 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaDotInvProbability" xml:space="preserve">
    <value>is a probability associated with the beta distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaDotInvAlpha" xml:space="preserve">
    <value>is a parameter to the distribution and must be greater than 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaDotInvBeta" xml:space="preserve">
    <value>is a parameter to the distribution and must be greater than 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaDotInvA" xml:space="preserve">
    <value>is an optional lower bound to the interval of x. If omitted, A = 0</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BetaDotInvB" xml:space="preserve">
    <value>is an optional upper bound to the interval of x. If omitted, B = 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChisqDotDistX" xml:space="preserve">
    <value>is the value at which you want to evaluate the distribution, a nonnegative number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChisqDotDistDegfreedom" xml:space="preserve">
    <value>is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChisqDotDistCumulative" xml:space="preserve">
    <value>is a logical value for the function to return: the cumulative distribution function = TRUE; the probability density function = FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChisqDotDistDotRtX" xml:space="preserve">
    <value>is the value at which you want to evaluate the distribution, a nonnegative number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChisqDotDistDotRtDegfreedom" xml:space="preserve">
    <value>is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChisqDotInvProbability" xml:space="preserve">
    <value>is a probability associated with the chi-squared distribution, a value between 0 and 1 inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChisqDotInvDegfreedom" xml:space="preserve">
    <value>is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChisqDotInvDotRtProbability" xml:space="preserve">
    <value>is a probability associated with the chi-squared distribution, a value between 0 and 1 inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ChisqDotInvDotRtDegfreedom" xml:space="preserve">
    <value>is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDotDistX" xml:space="preserve">
    <value>is the value at which to evaluate the function, a nonnegative number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDotDistDegfreedom1" xml:space="preserve">
    <value>is the numerator degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDotDistDegfreedom2" xml:space="preserve">
    <value>is the denominator degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDotDistCumulative" xml:space="preserve">
    <value>is a logical value for the function to return: the cumulative distribution function = TRUE; the probability density function = FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDotDistDotRtX" xml:space="preserve">
    <value>is the value at which to evaluate the function, a nonnegative number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDotDistDotRtDegfreedom1" xml:space="preserve">
    <value>is the numerator degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDotDistDotRtDegfreedom2" xml:space="preserve">
    <value>is the denominator degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDotInvProbability" xml:space="preserve">
    <value>is a probability associated with the F cumulative distribution, a number between 0 and 1 inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDotInvDegfreedom1" xml:space="preserve">
    <value>is the numerator degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDotInvDegfreedom2" xml:space="preserve">
    <value>is the denominator degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDotinvDotRtProbability" xml:space="preserve">
    <value>is a probability associated with the F cumulative distribution, a number between 0 and 1 inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDotinvDotRtDegfreedom1" xml:space="preserve">
    <value>is the numerator degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FDotinvDotRtDegfreedom2" xml:space="preserve">
    <value>is the denominator degrees of freedom, a number between 1 and 10^10, excluding 10^10</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HypgeomDotDistSamples" xml:space="preserve">
    <value>is the number of successes in the sample</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HypgeomDotDistNumbersample" xml:space="preserve">
    <value>is the size of the sample</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HypgeomDotDistPopulations" xml:space="preserve">
    <value>is the number of successes in the population</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HypgeomDotDistNumberpop" xml:space="preserve">
    <value>is the population size</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.HypgeomDotDistCumulative" xml:space="preserve">
    <value>is a logical value: for the cumulative distribution function, use TRUE; for the probability density function, use FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogNormDistX" xml:space="preserve">
    <value>is the value at which to evaluate the function, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogNormDistMean" xml:space="preserve">
    <value>is the mean of ln(x)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogNormDistStandarddev" xml:space="preserve">
    <value>is the standard deviation of ln(x), a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogNormDistCumulative" xml:space="preserve">
    <value>is a logical value: for the cumulative distribution function, use TRUE; for the probability density function, use FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogNormInvProbability" xml:space="preserve">
    <value>is a probability associated with the lognormal distribution, a number between 0 and 1, inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogNormInvMean" xml:space="preserve">
    <value>is the mean of ln(x)</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.LogNormInvStandarddev" xml:space="preserve">
    <value>is the standard deviation of ln(x), a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NegbinomDotDistNumberf" xml:space="preserve">
    <value>is the number of failures</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NegbinomDotDistNumbers" xml:space="preserve">
    <value>is the threshold number of successes</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NegbinomDotDistProbabilitys" xml:space="preserve">
    <value>is the probability of a success; a number between 0 and 1</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NegbinomDotDistCumulative" xml:space="preserve">
    <value>is a logical value: for the cumulative distribution function, use TRUE; for the probability mass function, use FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormSDistZ" xml:space="preserve">
    <value>is the value for which you want the distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormSDistCumulative" xml:space="preserve">
    <value>is a logical value for the function to return: the cumulative distribution function = TRUE; the probability density function = FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NormSInvProbability" xml:space="preserve">
    <value>is a probability corresponding to the normal distribution, a number between 0 and 1 inclusive</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDotTestArray1" xml:space="preserve">
    <value>is the first data set</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDotTestArray2" xml:space="preserve">
    <value>is the second data set</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDotTestTails" xml:space="preserve">
    <value>specifies the number of distribution tails to return: one-tailed distribution = 1; two-tailed distribution = 2</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TDotTestType" xml:space="preserve">
    <value>is the kind of t-test: paired = 1, two-sample equal variance (homoscedastic) = 2, two-sample unequal variance = 3</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ZDotTestArray" xml:space="preserve">
    <value>is the array or range of data against which to test X</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ZDotTestX" xml:space="preserve">
    <value>is the value to test</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ZDotTestSigma" xml:space="preserve">
    <value>is the population (known) standard deviation. If omitted, the sample standard deviation is used</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ErfPreciseX" xml:space="preserve">
    <value>is the lower bound for integrating ERF.PRECISE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ErfcPreciseX" xml:space="preserve">
    <value>is the lower bound for integrating ERFC.PRECISE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GammaLnPreciseX" xml:space="preserve">
    <value>is the value for which you want to calculate GAMMALN.PRECISE, a positive number</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CeilingDotPreciseNumber" xml:space="preserve">
    <value>is the value you want to round</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CeilingDotPreciseSignificance" xml:space="preserve">
    <value>is the multiple to which you want to round</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FloorDotPreciseNumber" xml:space="preserve">
    <value>is the numeric value you want to round</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FloorDotPreciseSignificance" xml:space="preserve">
    <value>is the multiple to which you want to round. </value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ACotNumber" xml:space="preserve">
    <value>is the cotangent of the angle you want</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ACotHNumber" xml:space="preserve">
    <value>is the hyperbolic cotangent of the angle that you want</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CotNumber" xml:space="preserve">
    <value>is the angle in radians for which you want the cotangent</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CotHNumber" xml:space="preserve">
    <value>is the angle in radians for which you want the hyperbolic cotangent</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CscNumber" xml:space="preserve">
    <value>is the angle in radians for which you want the cosecant</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CscHNumber" xml:space="preserve">
    <value>is the angle in radians for which you want the hyperbolic cosecant</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SecNumber" xml:space="preserve">
    <value>is the angle in radians for which you want the secant</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SecHNumber" xml:space="preserve">
    <value>is the angle in radians for which you want the hyperbolic secant</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImTanInumber" xml:space="preserve">
    <value>is a complex number for which you want the tangent</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImCotInumber" xml:space="preserve">
    <value>is a complex number for which you want the cotangent</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImCscInumber" xml:space="preserve">
    <value>is a complex number for which you want the cosecant</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImCscHInumber" xml:space="preserve">
    <value>is a complex number for which you want the hyperbolic cosecant</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImSecInumber" xml:space="preserve">
    <value>is a complex number for which you want the secant</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImSecHInumber" xml:space="preserve">
    <value>is a complex number for which you want the hyperbolic secant</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BitAndNumber1" xml:space="preserve">
    <value>is the decimal representation of the binary number you want to evaluate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BitAndNumber2" xml:space="preserve">
    <value>is the decimal representation of the binary number you want to evaluate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BitOrNumber1" xml:space="preserve">
    <value>is the decimal representation of the binary number you want to evaluate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BitOrNumber2" xml:space="preserve">
    <value>is the decimal representation of the binary number you want to evaluate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BitXorNumber1" xml:space="preserve">
    <value>is the decimal representation of the binary number you want to evaluate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BitXorNumber2" xml:space="preserve">
    <value>is the decimal representation of the binary number you want to evaluate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BitLShiftNumber" xml:space="preserve">
    <value>is the decimal representation of the binary number you want to evaluate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BitLShiftShiftamount" xml:space="preserve">
    <value>is the number of bits that you want to shift Number left by</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BitRShiftNumber" xml:space="preserve">
    <value>is the decimal representation of the binary number you want to evaluate</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BitRShiftShiftamount" xml:space="preserve">
    <value>is the number of bits that you want to shift Number right by</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PermutationaNumber" xml:space="preserve">
    <value>is the total number of objects</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PermutationaNumberchosen" xml:space="preserve">
    <value>is the number of objects in each permutation</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CombinANumber" xml:space="preserve">
    <value>is the total number of items</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CombinANumberchosen" xml:space="preserve">
    <value>is the number of items in each combination</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.XOrLogical1" xml:space="preserve">
    <value>are 1 to 254 conditions you want to test that can be either TRUE or FALSE and can be logical values, arrays, or references</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.XOrLogical2" xml:space="preserve">
    <value>are 1 to 254 conditions you want to test that can be either TRUE or FALSE and can be logical values, arrays, or references</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PDurationRate" xml:space="preserve">
    <value>is the interest rate per period.</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PDurationPv" xml:space="preserve">
    <value>is the present value of the investment</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PDurationFv" xml:space="preserve">
    <value>is the desired future value of the investment</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BaseNumber" xml:space="preserve">
    <value>is the number that you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BaseRadix" xml:space="preserve">
    <value>is the base Radix that you want to convert the number into</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BaseMinlength" xml:space="preserve">
    <value>is the minimum length of the returned string.  If omitted leading zeros are not added</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DecimalNumber" xml:space="preserve">
    <value>is the number that you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DecimalRadix" xml:space="preserve">
    <value>is the base Radix of the number you are converting</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DaysEnddate" xml:space="preserve">
    <value>start_date and end_date are the two dates between which you want to know the number of days</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.DaysStartdate" xml:space="preserve">
    <value>start_date and end_date are the two dates between which you want to know the number of days</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BinomDistRangeTrials" xml:space="preserve">
    <value>is the number of independent trials</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BinomDistRangeProbabilitys" xml:space="preserve">
    <value>is the probability of success on each trial</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BinomDistRangeNumbers" xml:space="preserve">
    <value>is the number of successes in trials</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.BinomDistRangeNumbers2" xml:space="preserve">
    <value>if provided this function returns the probability that the number of successful trials shall lie between number_s and number_s2</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.GammaX" xml:space="preserve">
    <value>is the value for which you want to calculate Gamma</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SkewPNumber1" xml:space="preserve">
    <value>are 1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SkewPNumber2" xml:space="preserve">
    <value>are 1 to 254 numbers or names, arrays, or references that contain numbers for which you want the population skewness</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.PhiX" xml:space="preserve">
    <value>is the number for which you want the density of the standard normal distribution</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RRINper" xml:space="preserve">
    <value>is the number of periods for the investment</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RRIPv" xml:space="preserve">
    <value>is the present value of the investment</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.RRIFv" xml:space="preserve">
    <value>is the future value of the investment</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.UnicodeText" xml:space="preserve">
    <value>is the character that you want the Unicode value of</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MUnitDimension" xml:space="preserve">
    <value>is an integer specifying the dimension of the unit matrix that you want to return</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ArabicText" xml:space="preserve">
    <value>is the Roman numeral you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ISOWeekNumDate" xml:space="preserve">
    <value>is the date-time code used by Spreadsheet for date and time calculation</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NumberValueText" xml:space="preserve">
    <value>is the string representing the number you want to convert</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NumberValueDecimalseparator" xml:space="preserve">
    <value>is the character used as the decimal separator in the string</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.NumberValueGroupseparator" xml:space="preserve">
    <value>is the character used as the group separator in the string</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SheetValue" xml:space="preserve">
    <value>is the name of a sheet or a reference that you want the sheet number of.  If omitted the number of the sheet containing the function is returned</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SheetsReference" xml:space="preserve">
    <value>is a reference for which you want to know the number of sheets it contains.  If omitted the number of sheets in the workbook containing the function is returned</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FormulaTextReference" xml:space="preserve">
    <value>is a reference to a formula</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IsFormulaReference" xml:space="preserve">
    <value>is a reference to the cell you want to test.  Reference can be a cell reference, a formula, or name that refers to a cell</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IfNAValue" xml:space="preserve">
    <value>is any value or expression or reference</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IfNAValueifna" xml:space="preserve">
    <value>is any value or expression or reference</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CeilingMathNumber" xml:space="preserve">
    <value>is the value you want to round</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CeilingMathSignificance" xml:space="preserve">
    <value>is the multiple to which you want to round</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.CeilingMathMode" xml:space="preserve">
    <value>when given and nonzero this function will round away from zero</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FloorMathNumber" xml:space="preserve">
    <value>is the value you want to round</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FloorMathSignificance" xml:space="preserve">
    <value>is the multiple to which you want to round</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FloorMathMode" xml:space="preserve">
    <value>when given and nonzero this function will round towards zero</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImSinHInumber" xml:space="preserve">
    <value>is a complex number for which you want the hyperbolic sine</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ImCosHInumber" xml:space="preserve">
    <value>is a complex number for which you want the hyperbolic cosine</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FunctionFilterXMLXml" xml:space="preserve">
    <value>is a string in valid XML format</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FunctionFilterXMLXpath" xml:space="preserve">
    <value>is a string in standard XPath format</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.FunctionWebServiceUrl" xml:space="preserve">
    <value>is the URL of the web service</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.EncodeURLText" xml:space="preserve">
    <value>is a string to be URL encoded</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ConcatText1" xml:space="preserve">
    <value>are 1 to 254 text strings or ranges to be joined to a single text string</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.ConcatText2" xml:space="preserve">
    <value>are 1 to 254 text strings or ranges to be joined to a single text string</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IfsLogicaltest" xml:space="preserve">
    <value>is any value or expression that can be evaluated to TRUE or FALSE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.IfsValueiftrue" xml:space="preserve">
    <value>is the value returned if Logical_test is TRUE</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MaxIfsMaxrange" xml:space="preserve">
    <value>the cells in which to determine the maximum value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MaxIfsCriteriarange" xml:space="preserve">
    <value>is the range of cells you want evaluate for the particular condition</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MaxIfsCriteria" xml:space="preserve">
    <value>is the condition or criteria in the form of a number, expression, or text that defines which cells will be included when determining the maximum value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MinIfsMinrange" xml:space="preserve">
    <value>the cells in which to determine the minimum value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MinIfsCriteriarange" xml:space="preserve">
    <value>is the range of cells you want evaluate for the particular condition</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.MinIfsCriteria" xml:space="preserve">
    <value>is the condition or criteria in the form of a number, expression, or text that defines which cells will be included when determining the minimum value</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SwitchExpression" xml:space="preserve">
    <value>is an expression to be evaluated</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SwitchValue1" xml:space="preserve">
    <value>is a value to be compared with expression</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SwitchResult1" xml:space="preserve">
    <value>is a result to be returned if the corresponding value matches expression</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SwitchDefaultOrValue2" xml:space="preserve">
    <value>is a value to be compared with expression</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SwitchResult2" xml:space="preserve">
    <value>is a result to be returned if the corresponding value matches expression</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SwitchDefaultOrValue3" xml:space="preserve">
    <value>is a value to be compared with expression</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SwitchResult3" xml:space="preserve">
    <value>is a result to be returned if the corresponding value matches expression</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TextJoinDelimeter" xml:space="preserve">
    <value>character or string to insert between each text item</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TextJoinIgnoreEmpty" xml:space="preserve">
    <value>if TRUE(default), ignores empty cells</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TextJoinText1" xml:space="preserve">
    <value>are 1 to 252 text strings or ranges to be joined</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.TextJoinText2" xml:space="preserve">
    <value>are 1 to 252 text strings or ranges to be joined</value>
  </data>
  <data name="XtraSpreadsheetFunctionArgumentDescriptionStringId.SingleValue" xml:space="preserve">
    <value>is a single item, range or array for implicit intersection</value>
  </data>
</root>