<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"></xsd:import>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LayoutStringId.CustomizationParentName" xml:space="preserve">
    <value>Personalização</value>
  </data>
  <data name="LayoutStringId.DefaultItemText" xml:space="preserve">
    <value>Item </value>
  </data>
  <data name="LayoutStringId.DefaultActionText" xml:space="preserve">
    <value>Ação pré-definida</value>
  </data>
  <data name="LayoutStringId.DefaultEmptyText" xml:space="preserve">
    <value>Nenhum</value>
  </data>
  <data name="LayoutStringId.LayoutItemDescription" xml:space="preserve">
    <value>Elemento de organização de itens</value>
  </data>
  <data name="LayoutStringId.LayoutGroupDescription" xml:space="preserve">
    <value>Elemento de organização de componente de agrupamentos</value>
  </data>
  <data name="LayoutStringId.TabbedGroupDescription" xml:space="preserve">
    <value>Elemento de organização de tabulador de agrupamentos</value>
  </data>
  <data name="LayoutStringId.LayoutControlDescription" xml:space="preserve">
    <value>Elemento de organização de componentes</value>
  </data>
  <data name="LayoutStringId.CustomizationFormTitle" xml:space="preserve">
    <value>Personalização</value>
  </data>
  <data name="LayoutStringId.TreeViewPageTitle" xml:space="preserve">
    <value>Árvore de organização</value>
  </data>
  <data name="LayoutStringId.HiddenItemsPageTitle" xml:space="preserve">
    <value>Itens escondidos</value>
  </data>
  <data name="LayoutStringId.RenameSelected" xml:space="preserve">
    <value>Renomear seleção</value>
  </data>
  <data name="LayoutStringId.HideItemMenutext" xml:space="preserve">
    <value>Esconder item</value>
  </data>
  <data name="LayoutStringId.LockItemSizeMenuText" xml:space="preserve">
    <value>Bloquear tamanho do item</value>
  </data>
  <data name="LayoutStringId.UnLockItemSizeMenuText" xml:space="preserve">
    <value>Desbloquear tamanho do item</value>
  </data>
  <data name="LayoutStringId.GroupItemsMenuText" xml:space="preserve">
    <value>Agrupar</value>
  </data>
  <data name="LayoutStringId.UnGroupItemsMenuText" xml:space="preserve">
    <value>Desagrupar</value>
  </data>
  <data name="LayoutStringId.CreateTabbedGroupMenuText" xml:space="preserve">
    <value>Criar tabulador agrupado</value>
  </data>
  <data name="LayoutStringId.AddTabMenuText" xml:space="preserve">
    <value>Adicionar página</value>
  </data>
  <data name="LayoutStringId.UnGroupTabbedGroupMenuText" xml:space="preserve">
    <value>Desagrupar grupo de tabuladores</value>
  </data>
  <data name="LayoutStringId.TreeViewRootNodeName" xml:space="preserve">
    <value>Raiz</value>
  </data>
  <data name="LayoutStringId.ShowCustomizationFormMenuText" xml:space="preserve">
    <value>Mostrar janela de formatação</value>
  </data>
  <data name="LayoutStringId.HideCustomizationFormMenuText" xml:space="preserve">
    <value>Esconder janela de formatação</value>
  </data>
  <data name="LayoutStringId.EmptySpaceItemDefaultText" xml:space="preserve">
    <value>Item vazio</value>
  </data>
  <data name="LayoutStringId.ControlGroupDefaultText" xml:space="preserve">
    <value>Agrupar</value>
  </data>
  <data name="LayoutStringId.EmptyRootGroupText" xml:space="preserve">
    <value>Arraste e solte os componentes aqui</value>
  </data>
  <data name="LayoutStringId.EmptyTabbedGroupText" xml:space="preserve">
    <value>Arraste e solte os grupos na área do tabulador.</value>
  </data>
  <data name="LayoutStringId.ResetLayoutMenuText" xml:space="preserve">
    <value>Restaurar organização</value>
  </data>
  <data name="LayoutStringId.RenameMenuText" xml:space="preserve">
    <value>Renomear</value>
  </data>
  <data name="LayoutStringId.TextPositionMenuText" xml:space="preserve">
    <value>Posição do texto</value>
  </data>
  <data name="LayoutStringId.TextPositionLeftMenuText" xml:space="preserve">
    <value>Esquerda</value>
  </data>
  <data name="LayoutStringId.TextPositionRightMenuText" xml:space="preserve">
    <value>Direita</value>
  </data>
  <data name="LayoutStringId.TextPositionTopMenuText" xml:space="preserve">
    <value>Superior</value>
  </data>
  <data name="LayoutStringId.TextPositionBottomMenuText" xml:space="preserve">
    <value>Inferior</value>
  </data>
  <data name="LayoutStringId.ShowTextMenuItem" xml:space="preserve">
    <value>Mostrar texto</value>
  </data>
  <data name="LayoutStringId.LockSizeMenuItem" xml:space="preserve">
    <value>Bloquear tamanho</value>
  </data>
  <data name="LayoutStringId.LockWidthMenuItem" xml:space="preserve">
    <value>Bloquear comprimento</value>
  </data>
  <data name="LayoutStringId.LockHeightMenuItem" xml:space="preserve">
    <value>Bloquear altura</value>
  </data>
  <data name="LayoutStringId.LockMenuGroup" xml:space="preserve">
    <value>Limites do tamanho</value>
  </data>
  <data name="LayoutStringId.FreeSizingMenuItem" xml:space="preserve">
    <value>Redimensionamento livre</value>
  </data>
  <data name="LayoutStringId.ResetConstraintsToDefaultsMenuItem" xml:space="preserve">
    <value>Restaurar pré-definição</value>
  </data>
  <data name="LayoutStringId.UndoHintCaption" xml:space="preserve">
    <value>Undo(Ctrl+Z)</value>
  </data>
  <data name="LayoutStringId.HiddenItemsNodeText" xml:space="preserve">
    <value>Items Ocultado</value>
  </data>
  <data name="LayoutStringId.SaveButtonHintText" xml:space="preserve">
    <value>Salvar layout para XML arquivo</value>
  </data>
  <data name="LayoutStringId.HideTextMenuItem" xml:space="preserve">
    <value>Ocultar Texto</value>
  </data>
  <data name="LayoutStringId.LoadButtonHintText" xml:space="preserve">
    <value>Carrega layout de XML arquivo</value>
  </data>
  <data name="LayoutStringId.SimpleLabelItemDefaultText" xml:space="preserve">
    <value>Rótulo</value>
  </data>
  <data name="LayoutStringId.UndoButtonHintText" xml:space="preserve">
    <value>Desfazer a última ação</value>
  </data>
  <data name="LayoutStringId.SplitterItemDefaultText" xml:space="preserve">
    <value>Rachador</value>
  </data>
  <data name="LayoutStringId.CreateEmptySpaceItem" xml:space="preserve">
    <value>Criar VazioEspaço Item</value>
  </data>
  <data name="LayoutStringId.SimpleSeparatorItemDefaultText" xml:space="preserve">
    <value>Separador</value>
  </data>
  <data name="LayoutStringId.RedoButtonHintText" xml:space="preserve">
    <value>Refazer a última ação</value>
  </data>
  <data name="LayoutStringId.SaveHintCaption" xml:space="preserve">
    <value>Save(Ctrl+S)</value>
  </data>
  <data name="LayoutStringId.LoadHintCaption" xml:space="preserve">
    <value>Load(Ctrl+O)</value>
  </data>
  <data name="LayoutStringId.RedoHintCaption" xml:space="preserve">
    <value>Redo(Ctrl+Y)</value>
  </data>
  <data name="LayoutStringId.LayoutResetConfirmationText" xml:space="preserve">
    <value>Você está prestes a redefinir as personalizações de layout. Você quer continuar?</value>
  </data>
  <data name="LayoutStringId.LayoutResetConfirmationDialogCaption" xml:space="preserve">
    <value>Layout confirmação de reset</value>
  </data>
  <data name="LayoutStringId.ShowSpaceMenuItem" xml:space="preserve">
    <value>Mostrar espaço reservado para texto</value>
  </data>
  <data name="LayoutStringId.HideSpaceMenuItem" xml:space="preserve">
    <value>Recolher espaço reservado para texto</value>
  </data>
  <data name="LayoutStringId.CreateTemplate" xml:space="preserve">
    <value>Criar o modelo</value>
  </data>
  <data name="LayoutStringId.DeleteTemplateText" xml:space="preserve">
    <value>Apagar</value>
  </data>
  <data name="LayoutStringId.ConvertToRegularLayoutText" xml:space="preserve">
    <value>Converter para Layout Regular</value>
  </data>
  <data name="LayoutStringId.ConvertToTableLayoutText" xml:space="preserve">
    <value>Converter para Layout de tabela</value>
  </data>
  <data name="LayoutStringId.ConvertToText" xml:space="preserve">
    <value>Converter para</value>
  </data>
  <data name="LayoutStringId.TableLayoutText" xml:space="preserve">
    <value>Layout de tabela</value>
  </data>
  <data name="LayoutStringId.FlowLayoutText" xml:space="preserve">
    <value>Layout de fluxo</value>
  </data>
  <data name="LayoutStringId.BestFitMenuText" xml:space="preserve">
    <value>Melhor Ajuste</value>
  </data>
  <data name="LayoutStringId.AddItem" xml:space="preserve">
    <value>Adicionar Item</value>
  </data>
  <data name="LayoutStringId.GroupStyleTitle" xml:space="preserve">
    <value>Título</value>
  </data>
</root>