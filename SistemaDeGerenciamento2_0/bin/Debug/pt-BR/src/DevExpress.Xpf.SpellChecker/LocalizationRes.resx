<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"></xsd:import>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SpellCheckerStringId.Form_EditCustomDictionary_CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="SpellCheckerStringId.Form_EditCustomDictionary_Caption" xml:space="preserve">
    <value>Edit Custom Dictionary</value>
  </data>
  <data name="SpellCheckerStringId.Form_EditCustomDictionary_OkButton" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="SpellCheckerStringId.Form_Spelling_AddButton" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="SpellCheckerStringId.Form_Spelling_CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="SpellCheckerStringId.Form_Spelling_Caption" xml:space="preserve">
    <value>Spelling</value>
  </data>
  <data name="SpellCheckerStringId.Form_Spelling_ChangeAllButton" xml:space="preserve">
    <value>Change All</value>
  </data>
  <data name="SpellCheckerStringId.Form_Spelling_ChangeButton" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="SpellCheckerStringId.Form_Spelling_ChangeTo" xml:space="preserve">
    <value>Change To:</value>
  </data>
  <data name="SpellCheckerStringId.Form_Spelling_CloseButton" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="SpellCheckerStringId.Form_Spelling_DeleteButton" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="SpellCheckerStringId.Form_Spelling_IgnoreAllButton" xml:space="preserve">
    <value>Ignore All</value>
  </data>
  <data name="SpellCheckerStringId.Form_Spelling_IgnoreButton" xml:space="preserve">
    <value>Ignore</value>
  </data>
  <data name="SpellCheckerStringId.Form_Spelling_NoSuggestions" xml:space="preserve">
    <value>(No suggestions)</value>
  </data>
  <data name="SpellCheckerStringId.Form_Spelling_NotInDictionary" xml:space="preserve">
    <value>Not in Dictionary:</value>
  </data>
  <data name="SpellCheckerStringId.Form_Spelling_OptionsButton" xml:space="preserve">
    <value>Options...</value>
  </data>
  <data name="SpellCheckerStringId.Form_Spelling_RepeatedWord" xml:space="preserve">
    <value>Repeated Word:</value>
  </data>
  <data name="SpellCheckerStringId.Form_Spelling_SuggestButton" xml:space="preserve">
    <value>Suggest</value>
  </data>
  <data name="SpellCheckerStringId.Form_Spelling_Suggestions" xml:space="preserve">
    <value>Suggestions:</value>
  </data>
  <data name="SpellCheckerStringId.Form_Spelling_UndoLastButton" xml:space="preserve">
    <value>Undo Last</value>
  </data>
  <data name="SpellCheckerStringId.Form_SpellingOptions_ApplyButton" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="SpellCheckerStringId.Form_SpellingOptions_CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="SpellCheckerStringId.Form_SpellingOptions_Caption" xml:space="preserve">
    <value>Spelling Options</value>
  </data>
  <data name="SpellCheckerStringId.Form_SpellingOptions_EditButton" xml:space="preserve">
    <value>Edit...</value>
  </data>
  <data name="SpellCheckerStringId.Form_SpellingOptions_EditCustomDictionary" xml:space="preserve">
    <value>Add, change or remove words from your custom dictionary.</value>
  </data>
  <data name="SpellCheckerStringId.Form_SpellingOptions_EditCustomDictionaryGroup" xml:space="preserve">
    <value>Edit Custom Dictionary</value>
  </data>
  <data name="SpellCheckerStringId.Form_SpellingOptions_GeneralOptionsGroup" xml:space="preserve">
    <value>General Options</value>
  </data>
  <data name="SpellCheckerStringId.Form_SpellingOptions_IgnoreEmails" xml:space="preserve">
    <value>Ignore E-Mails</value>
  </data>
  <data name="SpellCheckerStringId.Form_SpellingOptions_IgnoreRepeatedWords" xml:space="preserve">
    <value>Ignore Repeated Words</value>
  </data>
  <data name="SpellCheckerStringId.Form_SpellingOptions_IgnoreWebSites" xml:space="preserve">
    <value>Ignore Internet and file addresses</value>
  </data>
  <data name="SpellCheckerStringId.Form_SpellingOptions_IgnoreWordsInMixedcase" xml:space="preserve">
    <value>Ignore Words In MiXEdcAse</value>
  </data>
  <data name="SpellCheckerStringId.Form_SpellingOptions_IgnoreWordsInUppercase" xml:space="preserve">
    <value>Ignore Words In UPPERCASE</value>
  </data>
  <data name="SpellCheckerStringId.Form_SpellingOptions_IgnoreWordsWithNumbers" xml:space="preserve">
    <value>Ignore Words With Numbers</value>
  </data>
  <data name="SpellCheckerStringId.Form_SpellingOptions_InternationalDictionaries" xml:space="preserve">
    <value>Choose which dictionary to use when checking your spelling.</value>
  </data>
  <data name="SpellCheckerStringId.Form_SpellingOptions_InternationalDictionariesGroup" xml:space="preserve">
    <value>International Dictionaries</value>
  </data>
  <data name="SpellCheckerStringId.Form_SpellingOptions_Language" xml:space="preserve">
    <value>Language:</value>
  </data>
  <data name="SpellCheckerStringId.Form_SpellingOptions_OkButton" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="SpellCheckerStringId.Menu_AddToDictionaryCaption" xml:space="preserve">
    <value>Add to Dictionary</value>
  </data>
  <data name="SpellCheckerStringId.Menu_DeleteRepeatedWord" xml:space="preserve">
    <value>Delete Repeated Word</value>
  </data>
  <data name="SpellCheckerStringId.Menu_IgnoreAllItemCaption" xml:space="preserve">
    <value>Ignore All</value>
  </data>
  <data name="SpellCheckerStringId.Menu_IgnoreRepeatedWord" xml:space="preserve">
    <value>Ignore</value>
  </data>
  <data name="SpellCheckerStringId.Menu_ItemCaption" xml:space="preserve">
    <value>Check Spelling</value>
  </data>
  <data name="SpellCheckerStringId.Menu_NoSuggestionsCaption" xml:space="preserve">
    <value>(no spelling suggestions)</value>
  </data>
  <data name="SpellCheckerStringId.Msg_CanUseCurrentWord" xml:space="preserve">
    <value>You have chosen a word that is not found in the main or custom dictionaries.  Do you want to use this word and continue checking?</value>
  </data>
  <data name="SpellCheckerStringId.Msg_CheckNotSelectedText" xml:space="preserve">
    <value>Finished checking the selection. Do you want to check the rest of the text?</value>
  </data>
  <data name="SpellCheckerStringId.Msg_FinishCheck" xml:space="preserve">
    <value>Spell check complete.</value>
  </data>
</root>