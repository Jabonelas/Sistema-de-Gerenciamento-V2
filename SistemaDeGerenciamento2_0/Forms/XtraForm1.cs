using DevExpress.XtraBars.Docking2010.Views;
using DevExpress.XtraEditors;
using DevExpress.XtraEditors.Repository;
using DevExpress.XtraGrid;
using DevExpress.XtraGrid.Columns;
using DevExpress.XtraGrid.Views.BandedGrid;
using SistemaDeGerenciamento2_0.Class;
using SistemaDeGerenciamento2_0.Context;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace SistemaDeGerenciamento2_0.Forms
{
    public partial class XtraForm1 : DevExpress.XtraEditors.XtraForm
    {
        private DataTable dt = new DataTable();

        public XtraForm1()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();

            //PreencherGrid();

            teste();
        }

        private void teste()
        {
            var dataTable = new DataTable();
            dataTable.Columns.Add("Column1", typeof(string));
            dataTable.Columns.Add("Column2", typeof(string));
            dataTable.Rows.Add("Row1Value1", "Row1Value2");
            dataTable.Rows.Add("Row2Value1", "Row2Value2");
            dataTable.Rows.Add("Row2Value1", "Row2Value2");
            dataTable.Rows.Add("Row2Value1", "Row2Value2");

            gridControl3.DataSource = dataTable;
            gridControl3.Refresh();
            //bandedGridControl3.DataSource = dataTable;
            //bandedGridControl3.RefreshData();
        }

        private void PreencherGrid()
        {
            dt.Clear();
            dt.Columns.Clear();

            dt.Columns.Add("Data");
            dt.Columns.Add("Dia Semana");
            dt.Columns.Add("Quantidade Total");
            dt.Columns.Add("Valor Total Produto");

            try
            {
                SistemaDeGerenciamento2_0Context db = new SistemaDeGerenciamento2_0Context();

                var result = db.tb_nota_fiscal_saida
                    .Where(x => x.nfs_data_emissao >= Convert.ToDateTime("01/01/2023") && x.nfs_data_emissao <= Convert.ToDateTime("31/01/2023"))
                    .GroupBy(x => x.nfs_data_emissao)
                    .OrderBy(x => x.Key)
                    .Select(g => new
                    {
                        DataEmissao = g.Key,
                        TotalQuantidade = g.Sum(x => x.nfs_quantidade),
                        TotalValorPago = g.Sum(x => x.nfs_valor_pago)
                    });

                //decimal valorTotal = 0;
                //decimal quantidadeTotal = 0;

                foreach (var item in result)
                {
                    //string diaSemana = TraduzindoDiaDaSemana(item.DataEmissao.DayOfWeek.ToString());
                    string data = item.DataEmissao.ToShortDateString();
                    string quantidade = item.TotalQuantidade.ToString("N0");
                    string valor = item.TotalValorPago.ToString("C2");

                    dt.Rows.Add(data, "Segunda", quantidade, valor);

                    //valorTotal += item.TotalQuantidade;
                    //quantidadeTotal += item.TotalValorPago;
                }

                //lblQuantidadeTotal.Text = valorTotal.ToString("N0");
                //lblValorTotal.Text = quantidadeTotal.ToString("C2");
                //////////////////////////
                ///
                //DataTable dt = new DataTable();
                gridControl3.DataSource = dt;
                BandedGridView view = (BandedGridView)gridControl3.MainView;

                // Adicione as bandas
                GridBand band1 = view.Bands.AddBand("Band 1");
                GridBand band2 = view.Bands.AddBand("Band 2");

                // Adicione as colunas às bandas
                band1.Columns.Add(view.Columns["Column1"]);
                band1.Columns.Add(view.Columns["Column2"]);
                band2.Columns.Add(view.Columns["Column3"]);

                gridControl3.DataSource = dt;
                gridControl3.Refresh();
            }
            catch (Exception x)
            {
                LogErros.EscreverArquivoDeLog($"{DateTime.Now} - Erro ao Buscar Dados Relatorio por dia - Relatorio - Faturamento por dia | {x.Message} | {x.StackTrace}");

                MensagemErros.ErroAoBuscarDadosFaturamentoPorDia(x);
            }
        }
    }
}