using DevExpress.XtraGrid.Views.Grid.ViewInfo;
using DevExpress.XtraSplashScreen;
using SistemaDeGerenciamento2_0.Class;
using SistemaDeGerenciamento2_0.Context;
using System;
using System.Linq;
using System.Windows.Forms;
using DevExpress.XtraGrid.Columns;
using DevExpress.XtraGrid.Views.Grid;
using System.Data;

namespace SistemaDeGerenciamento2_0.Forms
{
    public partial class frmFinanceiro : DevExpress.XtraEditors.XtraForm
    {
        private int X = 0;
        private int Y = 0;

        private int rowHandle = 0;

        private GridColumn column;

        private frmTelaPrincipal frmTelaPrincipal;

        public frmFinanceiro(frmTelaPrincipal _frmTelaPrincipal)
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();

            frmTelaPrincipal = _frmTelaPrincipal;

            ReloadData();
        }

        private void ReloadData()
        {
            using (var handle = SplashScreenManager.ShowOverlayForm(frmTelaPrincipal))
            {
                ValorTotal();

                ValorAguadandoPagamento();

                ValorPagamentoRealizado();

                ValorPagamentoAtrasados();
            }
        }

        private void btnAdicionarXML_Click(object sender, EventArgs e)
        {
            frmEntradaNF frm = new frmEntradaNF();
            frm.ShowDialog();
        }

        private void frmFinanceiro_KeyDown(object sender, System.Windows.Forms.KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Escape)
            {
                this.Close();
            }
        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {
            frmContasComRepeticao frmContasComRepeticao = new frmContasComRepeticao();
            frmContasComRepeticao.ShowDialog();
        }

        private void btnFechar_Click(object sender, EventArgs e)
        {
            Close();
        }

        private void frmFinanceiro_MouseMove(object sender, MouseEventArgs e)
        {
            if (e.Button != MouseButtons.Left) return;
            this.Left = X + MousePosition.X;
            this.Top = Y + MousePosition.Y;
        }

        private void frmFinanceiro_MouseDown(object sender, MouseEventArgs e)
        {
            if (e.Button != MouseButtons.Left) return;
            X = this.Left - MousePosition.X;
            Y = this.Top - MousePosition.Y;
        }

        private void ValorTotal()
        {
            try
            {
                using (SistemaDeGerenciamento2_0Context db = new SistemaDeGerenciamento2_0Context())
                {
                    var valorTotal = db.tb_despesa.Select(x => x.dp_sub_valor_total).Sum();

                    lblTotal.Text = valorTotal.ToString("C2");
                }
            }
            catch (Exception x)
            {
                LogErros.EscreverArquivoDeLog($"{DateTime.Now} - Erro ao Buscar Valor Total - Financeiro - Consultar Despesa | {x.Message} | {x.StackTrace}");

                MensagemErros.ErroAoBuscarValorTotal(x);
            }
        }

        private void ValorAguadandoPagamento()
        {
            try
            {
                using (SistemaDeGerenciamento2_0Context db = new SistemaDeGerenciamento2_0Context())
                {
                    var valorAguadandoPagamento = db.tb_despesa.Where(x => x.dp_pagamento_em.Equals(null)).Select(x => x.dp_sub_valor_total).Sum();

                    lblTotalAguardando.Text = valorAguadandoPagamento.ToString("C2");
                }
            }
            catch (Exception x)
            {
                LogErros.EscreverArquivoDeLog($"{DateTime.Now} - Erro ao Buscar Valor Aguardando Pagamento - Financeiro - Consultar Despesa | {x.Message} | {x.StackTrace}");

                MensagemErros.ErroAoBuscarValorAguardandoPagamento(x);
            }
        }

        private void ValorPagamentoRealizado()
        {
            try
            {
                using (SistemaDeGerenciamento2_0Context db = new SistemaDeGerenciamento2_0Context())
                {
                    var ValorPagamentoRealizado = db.tb_despesa.Where(x => x.dp_pagamento_em != null).Select(x => x.dp_sub_valor_total).Sum();

                    lblTotalFinalizadas.Text = ValorPagamentoRealizado.ToString("C2");
                }
            }
            catch (Exception x)
            {
                LogErros.EscreverArquivoDeLog($"{DateTime.Now} - Erro ao Buscar Valor Pagamento Realizado - Financeiro - Consultar Despesa | {x.Message} | {x.StackTrace}");

                MensagemErros.ErroAoBuscarValorPagamentoRealizado(x);
            }
        }

        private void ValorPagamentoAtrasados()
        {
            try
            {
                using (SistemaDeGerenciamento2_0Context db = new SistemaDeGerenciamento2_0Context())
                {
                    var valorPagamentoAtrasados = db.tb_despesa.Where(x => x.dp_vencimento < DateTime.Today && x.dp_pagamento_em == null).Select(x => x.dp_sub_valor_total).Sum();

                    lblTotalAtrasadas.Text = valorPagamentoAtrasados.ToString("C2");
                }
            }
            catch (Exception x)
            {
                LogErros.EscreverArquivoDeLog($"{DateTime.Now} - Erro ao Buscar Valor Pagamento Atrasado - Financeiro - Consultar Despesa | {x.Message} | {x.StackTrace}");

                MensagemErros.ErroAoBuscarValorPagamentoAtrasado(x);
            }
        }

        private void gridView1_PopupMenuShowing_1(object sender, PopupMenuShowingEventArgs e)
        {
            GridView view = sender as GridView;
            GridHitInfo hitInfo = view.CalcHitInfo(e.Point);
            if (hitInfo.InRowCell)
            {
                view.FocusedRowHandle = rowHandle = hitInfo.RowHandle;
                column = hitInfo.Column;
                popupMenu1.ShowPopup(barManager1, view.GridControl.PointToScreen(e.Point));
            }
        }

        private void btnAlterar_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            MessageBox.Show("Test");
        }
    }
}